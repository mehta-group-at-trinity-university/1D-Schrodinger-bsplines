(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    241535,       5769]
NotebookOptionsPosition[    234281,       5581]
NotebookOutlinePosition[    234932,       5604]
CellTagsIndexPosition[    234889,       5601]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Discrete Variable Representation", "Title",
 CellChangeTimes->{{3.761752253494977*^9, 3.7617522786553926`*^9}, {
  3.7617523122353354`*^9, 3.7617523188702097`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[CellGroupData[{

Cell["Nirav Mehta", "Author",
 CellChangeTimes->{{3.761752321286232*^9, 3.761752327602989*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Trinity University", "Institution",
 CellChangeTimes->{{3.7617523292622223`*^9, 3.76175233464599*^9}, {
  3.761752454210527*^9, 3.761752454215096*^9}},
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.7617524639946117`*^9, 3.7617524809131813`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["These notes are based on lecture notes of Hans-Dieter Meyer.", "Text",
 CellChangeTimes->{{3.761753009810884*^9, 3.7617530276971416`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
These are basic notes serving as a record of my attempt to learn DVR methods. \
 Numerical methods are broadly divided into so-called \"spectral methods\" \
where one chooses an orthonormal basis (e.g. harmonic oscillator states) and \
calculates matrix elements for a Hamiltonian that can then be diagonalized, \
and \"grid methods\" where one uses the position eigenstates as the basis \
forming a grid.  In grid methods such as the finite-difference method, the \
potential energy operator is diagonal, while the kinetic energy is usually \
tri-diagonal (in the simplest approximation).  \
\>", "Text",
 CellChangeTimes->{{3.76175249076889*^9, 3.76175259369033*^9}, {
  3.761752638857181*^9, 3.761752725549191*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
DVR is in some ways a mixture of grid and spectral methods, a \
\[OpenCurlyDoubleQuote]pseudo-spectral method\[CloseCurlyDoubleQuote].  \
\>", "Text",
 CellChangeTimes->{{3.76175249076889*^9, 3.76175259369033*^9}, {
  3.761752638857181*^9, 3.761752754018057*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Pseudo-spectral methods use a global basis set, say ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Phi]", "j"], "(", "x", ")"}], "}"}], TraditionalForm]]],
 " and a set of grid points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    SubscriptBox["x", "\[Alpha]"], "}"}], TraditionalForm]]],
 ".  Both ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]]],
 " run from ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "..."}], "n"}], TraditionalForm]]],
 ".  "
}], "Text",
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]],

Cell[CellGroupData[{

Cell["Collocation", "Section",
 CellChangeTimes->{{3.7617524639946117`*^9, 3.761752489093936*^9}, {
  3.7617530024762993`*^9, 3.761753004121537*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Collocation is a simple method for determining the expansion coefficients \
for a wavefunction.  If one has ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Psi]", "(", "x", ")"}], "=", 
    RowBox[{
     UnderscriptBox["\[Sum]", "j"], 
     RowBox[{
      SubscriptBox["a", "j"], 
      RowBox[{
       SubscriptBox["\[Phi]", "j"], "(", "x", ")"}]}]}]}], 
   TraditionalForm]]],
 ", one ",
 StyleBox["could ",
  FontSlant->"Italic"],
 "use Fourier\[CloseCurlyQuote]s trick to determine the coefficients.  Or one \
could use ",
 StyleBox["collocation, ",
  FontSlant->"Italic"],
 "which amounts to requiring that the solution agree with the known \
wavefunction at ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " distinct points:"
}], "Text",
 CellChangeTimes->{{3.7617527755405684`*^9, 3.7617528524680843`*^9}, {
  3.7617529402595778`*^9, 3.761752958977325*^9}, {3.761752989621334*^9, 
  3.7617529994475594`*^9}, {3.761753043081244*^9, 3.761753189961628*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Psi]", "(", 
    SubscriptBox["x", "\[Alpha]"], ")"}], "=", 
   RowBox[{
    OverscriptBox[
     UnderscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}]], "n"], 
    RowBox[{
     SubscriptBox["a", "j"], 
     RowBox[{
      SubscriptBox["\[Phi]", "j"], "(", 
      SubscriptBox["x", "\[Alpha]"], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761753195770536*^9, 3.761753261134645*^9}, {
  3.761754647723222*^9, 3.761754674276692*^9}, {3.761755526672695*^9, 
  3.761755537917069*^9}, {3.7617555877037573`*^9, 3.761755593409643*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   TemplateBox[{SubscriptBox["x", "\[Alpha]"],"\[Psi]"},
    "BraKet"], "=", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}]], "n"], 
     RowBox[{
      SubscriptBox["a", "j"], 
      TemplateBox[{SubscriptBox["x", "\[Alpha]"],SubscriptBox["\[Phi]", "j"]},
       
       "BraKet"]}]}], "=", 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}]], "n"], 
     RowBox[{
      TemplateBox[{SubscriptBox["x", "\[Alpha]"],SubscriptBox["\[Phi]", "j"]},
       
       "BraKet"], 
      TemplateBox[{SubscriptBox["\[Phi]", "j"],"\[Psi]"},
       "BraKet"]}]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.76175559060386*^9, 3.761755594279319*^9}, {
  3.761759753189281*^9, 3.761759791544752*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["by defining", "Text",
 CellChangeTimes->{{3.761753223460235*^9, 3.7617532367352667`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["G", 
    RowBox[{"\[Alpha]", ",", "j"}]], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Phi]", "j"], "(", 
     SubscriptBox["x", "\[Alpha]"], ")"}], "=", 
    TemplateBox[{SubscriptBox["x", "\[Alpha]"],SubscriptBox["\[Phi]", "j"]},
     "BraKet"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761753239088752*^9, 3.76175326909231*^9}, {
  3.761755500741241*^9, 3.761755509990152*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["The above equation reads:", "Text",
 CellChangeTimes->{{3.761753273360153*^9, 3.7617532770190487`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Psi]", "(", 
    SubscriptBox["x", "\[Alpha]"], ")"}], "=", 
   RowBox[{
    OverscriptBox[
     UnderscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}]], "n"], 
    RowBox[{
     SubscriptBox["a", "j"], 
     SubscriptBox["G", 
      RowBox[{"\[Alpha]", ",", "j"}]]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761753281439107*^9, 3.761753285783248*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["or in matrix form:", "Text",
 CellChangeTimes->{{3.761753292496297*^9, 3.761753295137658*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["\[Psi]",
    FontWeight->"Bold"], "=", 
   RowBox[{
    StyleBox["G",
     FontWeight->"Bold"], " ", 
    StyleBox["a",
     FontWeight->"Bold"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761753299395859*^9, 3.761753304819549*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["a",
    FontWeight->"Bold"], "=", 
   RowBox[{
    SuperscriptBox[
     StyleBox["G",
      FontWeight->"Bold"], 
     RowBox[{"-", "1"}]], 
    StyleBox["\[Psi]",
     FontWeight->"Bold"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761753346361902*^9, 3.761753352935351*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "The matrix ",
 Cell[BoxData[
  FormBox[
   StyleBox["G",
    FontWeight->"Bold"], TraditionalForm]]],
 " serves as a linear transformation from the basis representation to the \
grid representation."
}], "Text",
 CellChangeTimes->{{3.761755626327157*^9, 3.761755653480781*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "In the grid representation, ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["V", "^"], TraditionalForm]]],
 " is a diagonal matrix:"
}], "Text",
 CellChangeTimes->{{3.761753380709551*^9, 3.761753398678215*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["V", 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "=", 
   RowBox[{
    RowBox[{"V", "(", 
     SubscriptBox["x", "\[Alpha]"], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761753400487363*^9, 3.761753420688938*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["T", "^"], TraditionalForm]]],
 " denote a general operator.  It has matrix elements with respect to \
functions (in the basis representation):"
}], "Text",
 CellChangeTimes->{{3.7617534367210217`*^9, 3.7617534644206667`*^9}, {
  3.761905069881102*^9, 3.761905079429734*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    TemplateBox[{"\[Phi]"},
     "Bra"], 
    OverscriptBox["T", "^"], 
    TemplateBox[{"\[Psi]"},
     "Ket"]}], "=", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox[
      StyleBox["a",
       FontWeight->"Bold"], "\[Phi]", "\[Dagger]"], 
     SuperscriptBox[
      StyleBox["T",
       FontWeight->"Bold"], 
      RowBox[{"(", "b", ")"}]], 
     SubscriptBox[
      StyleBox["a",
       FontWeight->"Bold"], "\[Psi]"]}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          StyleBox["G",
           FontWeight->"Bold"], 
          RowBox[{"-", "1"}]], 
         StyleBox["\[Phi]",
          FontWeight->"Bold"]}], ")"}], "\[Dagger]"], 
      SuperscriptBox[
       StyleBox["T",
        FontWeight->"Bold"], 
       RowBox[{"(", "b", ")"}]], 
      SuperscriptBox[
       StyleBox["G",
        FontWeight->"Bold"], 
       RowBox[{"-", "1"}]], 
      StyleBox["\[Psi]",
       FontWeight->"Bold"]}], "=", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        StyleBox["\[Phi]",
         FontWeight->"Bold"], "\[Dagger]"], "(", 
       RowBox[{
        SuperscriptBox[
         StyleBox["G",
          FontWeight->"Bold"], 
         SuperscriptBox["\[Dagger]", 
          RowBox[{"-", "1"}]]], 
        SuperscriptBox[
         StyleBox["T",
          FontWeight->"Bold"], 
         RowBox[{"(", "b", ")"}]], 
        SuperscriptBox[
         StyleBox["G",
          FontWeight->"Bold"], 
         RowBox[{"-", "1"}]]}], ")"}], 
      StyleBox["\[Psi]",
       FontWeight->"Bold"]}]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761905088582479*^9, 3.761905105852026*^9}, {
  3.761905264238009*^9, 3.761905444878841*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Evidently,", "Text",
 CellChangeTimes->{{3.761905449467029*^9, 3.7619054520153933`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    StyleBox["T",
     FontWeight->"Bold"], "g"], "=", 
   RowBox[{
    SuperscriptBox[
     StyleBox["G",
      FontWeight->"Bold"], 
     SuperscriptBox["\[Dagger]", 
      RowBox[{"-", "1"}]]], 
    SuperscriptBox[
     StyleBox["T",
      FontWeight->"Bold"], 
     RowBox[{"(", "b", ")"}]], 
    SuperscriptBox[
     StyleBox["G",
      FontWeight->"Bold"], 
     RowBox[{"-", "1"}]]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761905449467029*^9, 3.761905473145555*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["where", "Text",
 CellChangeTimes->{{3.76190549932236*^9, 3.761905499821217*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubsuperscriptBox["T", 
    RowBox[{"i", ",", "j"}], 
    RowBox[{"(", "b", ")"}]], "=", 
   RowBox[{
    TemplateBox[{SubscriptBox["\[Phi]", "i"]},
     "Bra"], 
    OverscriptBox["T", "^"], 
    TemplateBox[{SubscriptBox["\[Phi]", "j"]},
     "Ket"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761753466528256*^9, 3.761753524973431*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "If we choose the identity operator, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["T", "^"], "=", 
    OverscriptBox["1", "^"]}], TraditionalForm]]],
 ", then we obtain the overlap integral "
}], "Text",
 CellChangeTimes->{{3.7619055253154383`*^9, 3.7619055457797403`*^9}, {
  3.761905926884158*^9, 3.7619059461646967`*^9}, {3.761905982796564*^9, 
  3.761905983299981*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   TemplateBox[{"\[Phi]","\[Psi]"},
    "BraKet"], "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      StyleBox["\[Phi]",
       FontWeight->"Bold"], "\[Dagger]"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        StyleBox["G",
         FontWeight->"Bold"], " ", 
        SuperscriptBox[
         StyleBox["G",
          FontWeight->"Bold"], "\[Dagger]"]}], ")"}], 
      RowBox[{"-", "1"}]], 
     StyleBox["\[Psi]",
      FontWeight->"Bold"]}], "=", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}]], 
     RowBox[{
      RowBox[{"\[Phi]", "\[Conjugate]"}], 
      RowBox[{"(", 
       SubscriptBox["x", "\[Alpha]"], ")"}], 
      SubscriptBox[
       RowBox[{"(", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           StyleBox["G",
            FontWeight->"Bold"], " ", 
           SuperscriptBox[
            StyleBox["G",
             FontWeight->"Bold"], "\[Dagger]"]}], ")"}], 
         RowBox[{"-", "1"}]], ")"}], 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}]], 
      RowBox[{"\[Psi]", "(", 
       SubscriptBox["x", "\[Beta]"], ")"}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7619059355720882`*^9, 3.761906003163466*^9}, {
  3.761906060748638*^9, 3.761906199842936*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
which is similar to a quadrature rule, except for the double sum.  If we wish \
to evaluate this overlap integral (and other matrix elements) with \
quadrature, then we must require:\
\>", "Text",
 CellChangeTimes->{{3.76190620786384*^9, 3.761906260365539*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    RowBox[{"(", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        StyleBox["G",
         FontWeight->"Bold"], " ", 
        SuperscriptBox[
         StyleBox["G",
          FontWeight->"Bold"], "\[Dagger]"]}], ")"}], 
      RowBox[{"-", "1"}]], ")"}], 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "=", 
   RowBox[{
    SubscriptBox["w", "\[Alpha]"], 
    SubscriptBox["\[Delta]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761906270041205*^9, 3.761906282038048*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    RowBox[{"(", 
     RowBox[{
      StyleBox["G",
       FontWeight->"Bold"], " ", 
      SuperscriptBox[
       StyleBox["G",
        FontWeight->"Bold"], "\[Dagger]"]}], ")"}], 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "=", 
   RowBox[{
    SubsuperscriptBox["w", "\[Alpha]", 
     RowBox[{"-", "1"}]], 
    SubscriptBox["\[Delta]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761906197783437*^9, 3.761906198378976*^9}, {
  3.76190630496638*^9, 3.761906332149695*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["so that", "Text",
 CellChangeTimes->{{3.761906390372971*^9, 3.761906391007944*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   TemplateBox[{"\[Phi]","\[Psi]"},
    "BraKet"], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", "\[Alpha]"], 
    RowBox[{
     SubscriptBox["w", "\[Alpha]"], 
     RowBox[{"\[Phi]", "\[Conjugate]"}], 
     RowBox[{"(", 
      SubscriptBox["x", "\[Alpha]"], ")"}], 
     RowBox[{"\[Psi]", "(", 
      SubscriptBox["x", "\[Alpha]"], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761906396349736*^9, 3.761906419970889*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "We can collect the weights into a diagonal matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["W",
     FontWeight->"Bold"], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       StyleBox["G",
        FontWeight->"Bold"], " ", 
       SuperscriptBox[
        StyleBox["G",
         FontWeight->"Bold"], "\[Dagger]"]}], ")"}], 
     RowBox[{"-", "1"}]]}], TraditionalForm]]],
 " with matrix elements ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["W", "\[Alpha]\[Beta]"], "=", 
    RowBox[{
     SubscriptBox["\[Delta]", "\[Alpha]\[Beta]"], 
     RowBox[{
      SubscriptBox["w", "\[Alpha]"], "."}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.761906679165677*^9, 3.761906716058783*^9}, {
  3.7619069521036367`*^9, 3.761906952306253*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["The grid representation of an operator can be written:", "Text",
 CellChangeTimes->{{3.761906826728364*^9, 3.76190683693259*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    StyleBox["T",
     FontWeight->"Bold"], "g"], "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      StyleBox["G",
       FontWeight->"Bold"], 
      SuperscriptBox["\[Dagger]", 
       RowBox[{"-", "1"}]]], 
     SuperscriptBox[
      StyleBox["T",
       FontWeight->"Bold"], 
      RowBox[{"(", "b", ")"}]], 
     SuperscriptBox[
      StyleBox["G",
       FontWeight->"Bold"], 
      RowBox[{"-", "1"}]]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        StyleBox["G",
         FontWeight->"Bold"], 
        SuperscriptBox["\[Dagger]", 
         RowBox[{"-", "1"}]]], "(", 
       RowBox[{
        SuperscriptBox[
         StyleBox["G",
          FontWeight->"Bold"], 
         RowBox[{"-", "1"}]], 
        StyleBox["G",
         FontWeight->"Bold"]}], 
       StyleBox[")",
        FontWeight->"Bold"]}], " ", 
      SuperscriptBox[
       StyleBox["T",
        FontWeight->"Bold"], 
       RowBox[{"(", "b", ")"}]], 
      SuperscriptBox[
       StyleBox["G",
        FontWeight->"Bold"], 
       RowBox[{"-", "1"}]]}], "=", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          StyleBox["G",
           FontWeight->"Bold"], " ", 
          SuperscriptBox[
           StyleBox["G",
            FontWeight->"Bold"], "\[Dagger]"]}], ")"}], 
        RowBox[{"-", "1"}]], 
       StyleBox["G",
        FontWeight->"Bold"], " ", 
       SuperscriptBox[
        StyleBox["T",
         FontWeight->"Bold"], 
        RowBox[{"(", "b", ")"}]], 
       SuperscriptBox[
        StyleBox["G",
         FontWeight->"Bold"], 
        RowBox[{"-", "1"}]]}], "=", 
      RowBox[{
       StyleBox["W",
        FontWeight->"Bold"], " ", 
       StyleBox["G",
        FontWeight->"Bold"], " ", 
       SuperscriptBox[
        StyleBox["T",
         FontWeight->"Bold"], 
        RowBox[{"(", "b", ")"}]], 
       SuperscriptBox[
        StyleBox["G",
         FontWeight->"Bold"], 
        RowBox[{"-", "1"}]]}]}]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761906838539555*^9, 3.761906935866973*^9}, {
  3.761906973379389*^9, 3.761906981384004*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Now, for the quadrature rule to work we must have", "Text",
 CellChangeTimes->{{3.761907070633947*^9, 3.761907088702003*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    RowBox[{"(", 
     RowBox[{
      StyleBox["G",
       FontWeight->"Bold"], " ", 
      SuperscriptBox[
       StyleBox["G",
        FontWeight->"Bold"], "\[Dagger]"]}], ")"}], 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "=", 
   RowBox[{
    SubsuperscriptBox["w", "\[Alpha]", 
     RowBox[{"-", "1"}]], 
    SubscriptBox["\[Delta]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{3.7619070903115873`*^9},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    UnderscriptBox["\[Sum]", "j"], 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Phi]", "j"], "(", 
      SubscriptBox["x", "\[Alpha]"], ")"}], 
     RowBox[{
      SubscriptBox["\[Phi]", "j"], "\[Conjugate]"}], 
     RowBox[{"(", 
      SubscriptBox["x", "\[Beta]"], ")"}]}]}], "=", 
   RowBox[{
    SubsuperscriptBox["w", "\[Alpha]", 
     RowBox[{"-", "1"}]], 
    SubscriptBox["\[Delta]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761907105868206*^9, 3.761907213161417*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "It is not obvious that it is even ",
 StyleBox["possible ",
  FontSlant->"Italic"],
 "to find a basis with this property.  But we shall show that DVR provides a \
way to define such a basis and choose points ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "\[Alpha]"], TraditionalForm]]],
 " so that the above equation is satisfied.  Let us for now assume that such \
functions and points exist and consider the consequences."
}], "Text",
 CellChangeTimes->{{3.761907228881158*^9, 3.761907338104094*^9}, {
  3.761907638203569*^9, 3.761907658195716*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "We can rescale ",
 Cell[BoxData[
  FormBox[
   StyleBox["G",
    FontWeight->"Bold"], TraditionalForm]]],
 "  so that it is unitary:"
}], "Text",
 CellChangeTimes->{{3.7619076996953773`*^9, 3.7619077153789997`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["W",
    FontWeight->"Bold"], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       StyleBox["G",
        FontWeight->"Bold"], " ", 
       SuperscriptBox[
        StyleBox["G",
         FontWeight->"Bold"], "\[Dagger]"]}], ")"}], 
     RowBox[{"-", "1"}]], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       SuperscriptBox[
        StyleBox["G",
         FontWeight->"Bold"], "\[Dagger]"], 
       RowBox[{"-", "1"}]], 
      SuperscriptBox[
       StyleBox["G",
        FontWeight->"Bold"], 
       RowBox[{"-", "1"}]]}], "\[DoubleRightArrow]"}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761907101514811*^9, 3.761907103401927*^9}, {
  3.761907721514071*^9, 3.761907794070486*^9}, {3.7619078420175343`*^9, 
  3.7619078578429956`*^9}, {3.7619078881732616`*^9, 3.76190795053857*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["1",
    FontWeight->"Bold"], "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      StyleBox["G",
       FontWeight->"Bold"], "\[Dagger]"], 
     StyleBox["W",
      FontWeight->"Bold"], " ", 
     StyleBox["G",
      FontWeight->"Bold"]}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       StyleBox["G",
        FontWeight->"Bold"], "\[Dagger]"], 
      SuperscriptBox[
       StyleBox["W",
        FontWeight->"Bold"], 
       RowBox[{"1", "/", "2"}]], 
      StyleBox[" ",
       FontWeight->"Bold"], 
      SuperscriptBox[
       StyleBox["W",
        FontWeight->"Bold"], 
       RowBox[{"1", "/", "2"}]], " ", 
      StyleBox["G",
       FontWeight->"Bold"]}], "=", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          StyleBox["W",
           FontWeight->"Bold"], 
          RowBox[{"1", "/", "2"}]], 
         StyleBox["G",
          FontWeight->"Bold"]}], 
        StyleBox[")",
         FontWeight->"Bold"]}], "\[Dagger]"], 
      StyleBox[" ",
       FontWeight->"Bold"], 
      RowBox[{
       StyleBox["(",
        FontWeight->"Bold"], 
       RowBox[{
        SuperscriptBox[
         StyleBox["W",
          FontWeight->"Bold"], 
         RowBox[{"1", "/", "2"}]], " ", 
        StyleBox["G",
         FontWeight->"Bold"]}], 
       StyleBox[")",
        FontWeight->"Bold"]}]}]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{3.761907952244226*^9},
 TextAlignment->Left,
 TextJustification->0.],

Cell["So we define a unitary transformation:", "Text",
 CellChangeTimes->{{3.761907960199683*^9, 3.76190796645*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     StyleBox["U",
      FontWeight->"Bold"], "\[Dagger]"], "=", 
    RowBox[{
     StyleBox["(",
      FontWeight->"Bold"], 
     RowBox[{
      SuperscriptBox[
       StyleBox["W",
        FontWeight->"Bold"], 
       RowBox[{"1", "/", "2"}]], " ", 
      StyleBox["G",
       FontWeight->"Bold"]}], 
     StyleBox[")",
      FontWeight->"Bold"]}]}], ",", 
   StyleBox[
    RowBox[{"  ", 
     StyleBox[" ",
      FontWeight->"Bold"]}]], 
   RowBox[{
    StyleBox["U",
     FontWeight->"Bold"], 
    StyleBox["=",
     FontWeight->"Plain"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       StyleBox["(",
        FontWeight->"Bold"], 
       RowBox[{
        SuperscriptBox[
         StyleBox["W",
          FontWeight->"Bold"], 
         RowBox[{"1", "/", "2"}]], " ", 
        StyleBox["G",
         FontWeight->"Bold"]}], 
       StyleBox[")",
        FontWeight->"Bold"]}], "\[Dagger]"], "=", 
     RowBox[{
      SuperscriptBox[
       StyleBox["G",
        FontWeight->"Bold"], "\[Dagger]"], 
      SuperscriptBox[
       StyleBox["W",
        FontWeight->"Bold"], 
       RowBox[{"1", "/", "2"}]]}]}]}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.7619079692114897`*^9, 3.761907974918037*^9}, {
  3.761908215695116*^9, 3.76190821696231*^9}, {3.761908279280464*^9, 
  3.761908301752779*^9}, {3.761908413916378*^9, 3.76190841903472*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Such that ", "Text",
 CellChangeTimes->{{3.7619079788290863`*^9, 3.7619079801775627`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["U",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], 
    SuperscriptBox[
     StyleBox["U",
      FontWeight->"Bold"], "\[Dagger]"]}], "=", 
   RowBox[{
    StyleBox["1",
     FontWeight->"Bold"], 
    StyleBox["=",
     FontWeight->"Plain"], 
    RowBox[{
     SuperscriptBox[
      StyleBox["U",
       FontWeight->"Bold"], "\[Dagger]"], 
     StyleBox["U",
      FontWeight->"Bold"]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761907982937779*^9, 3.761907994567811*^9}, {
  3.761908225632834*^9, 3.761908229634859*^9}, {3.761908635095519*^9, 
  3.761908641396902*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "The matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["U",
     FontWeight->"Bold"], "=", 
    RowBox[{
     SuperscriptBox[
      StyleBox["G",
       FontWeight->"Bold"], "\[Dagger]"], 
     SuperscriptBox[
      StyleBox["W",
       FontWeight->"Bold"], 
      RowBox[{"1", "/", "2"}]]}]}], TraditionalForm]]],
 " has elements:"
}], "Text",
 CellChangeTimes->{{3.7619087046344967`*^9, 3.761908738292207*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["U", 
    RowBox[{"i", ",", "\[Alpha]"}]], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Phi]", "i"], "\[Conjugate]"}], 
    RowBox[{"(", 
     SubscriptBox["x", "\[Alpha]"], ")"}], 
    SubsuperscriptBox["w", "\[Alpha]", 
     RowBox[{"1", "/", "2"}]]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7619087142635307`*^9, 3.76190871602209*^9}, {
  3.761908752502289*^9, 3.761908785322524*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 StyleBox["Orthogonality",
  FontWeight->"Bold"],
 " of the basis functions is expressed by:"
}], "Text",
 CellChangeTimes->{{3.761908947024971*^9, 3.761908954852539*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    RowBox[{"(", 
     RowBox[{
      StyleBox["U",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], 
      SuperscriptBox[
       StyleBox["U",
        FontWeight->"Bold"], "\[Dagger]"]}], ")"}], 
    RowBox[{"i", ",", "j"}]], "=", 
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Sum]", "\[Alpha]"], 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Phi]", "i"], "\[Conjugate]"}], 
      RowBox[{"(", 
       SubscriptBox["x", "\[Alpha]"], ")"}], 
      RowBox[{
       SubscriptBox["\[Phi]", "j"], "(", 
       SubscriptBox["x", "\[Alpha]"], ")"}], 
      SubscriptBox["w", "\[Alpha]"]}]}], "=", 
    SubscriptBox["\[Delta]", 
     RowBox[{"i", ",", "j"}]], " "}]}], TraditionalForm]], "EquationNumbered",\

 CellChangeTimes->{{3.761908672042843*^9, 3.761908675771068*^9}, {
  3.761908893163396*^9, 3.76190894587868*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "while ",
 StyleBox["completeness ",
  FontWeight->"Bold"],
 "of the basis function is expressed by:"
}], "Text",
 CellChangeTimes->{{3.761908962055339*^9, 3.761908973723352*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["U", "\[Dagger]"], "U"}], ")"}], 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "=", 
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Sum]", "j"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["w", "\[Alpha]"], 
         SubscriptBox["w", "\[Beta]"]}], ")"}], 
       RowBox[{"1", "/", "2"}]], 
      RowBox[{
       SubscriptBox["\[Phi]", "j"], "(", 
       SubscriptBox["x", "\[Alpha]"], ")"}], 
      RowBox[{
       SubscriptBox["\[Phi]", "j"], "\[Conjugate]"}], 
      RowBox[{"(", 
       SubscriptBox["x", "\[Beta]"], ")"}]}]}], "=", 
    SubscriptBox["\[Delta]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761908978740584*^9, 3.761909101017585*^9}, {
  3.761909156763444*^9, 3.761909176088112*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "One could absorb the weights into the functions if one wished by defining a \
vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["\[Psi]",
     FontWeight->"Bold"], 
    StyleBox["=",
     FontWeight->"Plain"], 
    RowBox[{
     RowBox[{
      StyleBox["{",
       FontWeight->"Plain"], 
      SubscriptBox[
       StyleBox["\[Psi]",
        FontWeight->"Plain"], "\[Alpha]"], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        SubscriptBox["w", "\[Alpha]"]], 
       RowBox[{"\[Psi]", "(", 
        SubscriptBox["x", "\[Alpha]"], ")"}]}], "}"}]}]}], 
   TraditionalForm]]],
 "  Then:"
}], "Text",
 CellChangeTimes->{{3.7619091921521273`*^9, 3.7619092053013773`*^9}, {
  3.7619092372487392`*^9, 3.761909315216688*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "With this definition, the basis vectors ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Phi]", 
     StyleBox["j",
      FontWeight->"Plain"]],
    FontWeight->"Bold"], TraditionalForm]]],
 " are orthonormal and complete: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox[
      StyleBox["\[Phi]",
       FontWeight->"Bold"], "j", "\[Dagger]"], 
     SubscriptBox[
      StyleBox["\[Phi]",
       FontWeight->"Bold"], "i"]}], "=", 
    SubscriptBox["\[Delta]", 
     RowBox[{"j", ",", "i"}]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], 
     RowBox[{
      SubscriptBox[
       StyleBox["\[Phi]",
        FontWeight->"Bold"], "i"], " ", 
      SuperscriptBox[
       SubscriptBox[
        StyleBox["\[Phi]",
         FontWeight->"Bold"], "i"], "\[Dagger]"]}]}], "=", 
    StyleBox["1",
     FontWeight->"Bold"]}], TraditionalForm]]],
 ".  An arbitrary overlap is"
}], "Text",
 CellChangeTimes->{{3.761909435315411*^9, 3.761909628715301*^9}, {
  3.7619096989462547`*^9, 3.761909713373558*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     StyleBox["\[Phi]",
      FontWeight->"Bold"], "\[Dagger]"], 
    StyleBox["\[Psi]",
     FontWeight->"Bold"]}], "=", 
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Sum]", "\[Alpha]"], 
     RowBox[{
      RowBox[{"\[Phi]", "\[Conjugate]"}], 
      RowBox[{"(", 
       SubscriptBox["x", "\[Alpha]"], ")"}], 
      RowBox[{"\[Psi]", "(", 
       SubscriptBox["x", "\[Alpha]"], ")"}], 
      SubscriptBox["w", "\[Alpha]"]}]}], "=", 
    TemplateBox[{"\[Phi]","\[Psi]"},
     "BraKet"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7619100966408243`*^9, 3.761910145295095*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "The final equality is exact only if ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]]],
 " and \[Psi] are members of the basis set.  Otherwise, the quadrature is \
approximate."
}], "Text",
 CellChangeTimes->{{3.761910156650611*^9, 3.761910188373899*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[CellGroupData[{

Cell["DVR functions", "Subsubsection",
 CellChangeTimes->{{3.7619102156015863`*^9, 3.7619102260345793`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Finally, introduce the DVR functions:", "Text",
 CellChangeTimes->{{3.761910218846347*^9, 3.761910230727989*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   TemplateBox[{SubscriptBox["\[Chi]", "\[Alpha]"]},
    "Ket"], "=", 
   RowBox[{
    OverscriptBox[
     UnderscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}]], "n"], 
    RowBox[{
     TemplateBox[{SubscriptBox["\[Phi]", "j"]},
      "Ket"], 
     SubscriptBox["U", 
      RowBox[{"j", ",", "\[Alpha]"}]]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761910232705143*^9, 3.761910307129004*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Which suggests", "Text",
 CellChangeTimes->{{3.761910298272767*^9, 3.761910303452985*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["U", 
    RowBox[{"j", ",", "\[Alpha]"}]], "=", 
   TemplateBox[{
    SubscriptBox["\[Phi]", "j"],SubscriptBox["\[Chi]", "\[Alpha]"]},
    "BraKet"]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761909210424638*^9, 3.761909233848865*^9}, {
  3.761910309048771*^9, 3.761910337601994*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Or using our previous definition for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["U", 
     RowBox[{"i", ",", "\[Alpha]"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Phi]", "i"], "\[Conjugate]"}], 
     RowBox[{"(", 
      SubscriptBox["x", "\[Alpha]"], ")"}], 
     SubsuperscriptBox["w", "\[Alpha]", 
      RowBox[{"1", "/", "2"}]]}]}], TraditionalForm]]],
 ","
}], "Text",
 CellChangeTimes->{{3.761910497640746*^9, 3.761910524457201*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   TemplateBox[{SubscriptBox["\[Chi]", "\[Alpha]"]},
    "Ket"], "=", 
   RowBox[{
    OverscriptBox[
     UnderscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}]], "n"], 
    RowBox[{
     TemplateBox[{SubscriptBox["\[Phi]", "j"]},
      "Ket"], 
     RowBox[{
      SubscriptBox["\[Phi]", "j"], "\[Conjugate]"}], 
     RowBox[{"(", 
      SubscriptBox["x", "\[Alpha]"], ")"}], 
     SubsuperscriptBox["w", "\[Alpha]", 
      RowBox[{"1", "/", "2"}]]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761910363846676*^9, 3.761910383586598*^9}, {
  3.7619104405150948`*^9, 3.761910456845684*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Hitting from the left with ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"x"},
    "Bra"], TraditionalForm]]],
 " "
}], "Text",
 CellChangeTimes->{{3.761910527668191*^9, 3.7619105463334827`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Chi]", "\[Alpha]"], "(", "x", ")"}], "=", 
   RowBox[{
    OverscriptBox[
     UnderscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}]], "n"], 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Phi]", "j"], "(", "x", ")"}], 
     RowBox[{
      SubscriptBox["\[Phi]", "j"], "\[Conjugate]"}], 
     RowBox[{"(", 
      SubscriptBox["x", "\[Alpha]"], ")"}], 
     SubsuperscriptBox["w", "\[Alpha]", 
      RowBox[{"1", "/", "2"}]]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761910554997081*^9, 3.7619105754560432`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Because the DVR functions are obtained by a unitary transformation of \
orthogonal functions, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{SubscriptBox["\[Chi]", "\[Alpha]"]},
     "Ket"], "=", 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}]], "n"], 
     RowBox[{
      TemplateBox[{SubscriptBox["\[Phi]", "j"]},
       "Ket"], 
      SubscriptBox["U", 
       RowBox[{"j", ",", "\[Alpha]"}]]}]}]}], TraditionalForm]],
  CellChangeTimes->{{3.761910232705143*^9, 3.761910307129004*^9}}],
 ", they themselves are orthogonal ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{
     SubscriptBox["\[Chi]", "\[Alpha]"],SubscriptBox["\[Chi]", "\[Beta]"]},
     "BraKet"], "=", 
    SubscriptBox["\[Delta]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]]}], TraditionalForm]]],
 ".  "
}], "Text",
 CellChangeTimes->{{3.761910646917968*^9, 3.76191069862921*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Multiplying ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "\[Alpha]"], "(", "x", ")"}], TraditionalForm]],
  CellChangeTimes->{{3.761910554997081*^9, 3.7619105754560432`*^9}}],
 " by ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["w", "\[Beta]", 
    RowBox[{"1", "/", "2"}]], TraditionalForm]]],
 "  and evaluating ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    SubscriptBox["x", "\[Beta]"]}], TraditionalForm]]],
 " reveals the following ",
 StyleBox["remarkable property:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.761910701686452*^9, 3.761910771389092*^9}, {
   3.761910805052759*^9, 3.761910809512164*^9}, {3.761910893388279*^9, 
   3.761910896135336*^9}, 3.761910969123221*^9},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["w", "\[Beta]", 
     RowBox[{"1", "/", "2"}]], 
    RowBox[{
     SubscriptBox["\[Chi]", "\[Alpha]"], "(", 
     SubscriptBox["x", "\[Beta]"], ")"}]}], "=", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}]], "n"], 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Phi]", "j"], "(", 
       SubscriptBox["x", "\[Beta]"], ")"}], 
      RowBox[{
       SubscriptBox["\[Phi]", "j"], "\[Conjugate]"}], 
      RowBox[{"(", 
       SubscriptBox["x", "\[Alpha]"], ")"}], 
      SubsuperscriptBox["w", "\[Beta]", 
       RowBox[{"1", "/", "2"}]], 
      SubsuperscriptBox["w", "\[Alpha]", 
       RowBox[{"1", "/", "2"}]]}]}], "=", 
    SubscriptBox["\[Delta]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.76191077615653*^9, 3.7619108226583242`*^9}, {
  3.7619108805622053`*^9, 3.761910884482357*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "This property of DVR functions is called the ",
 StyleBox["discrete \[Delta] property:",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.761910971716614*^9, 3.7619109866443243`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Chi]", "\[Alpha]"], "(", 
    SubscriptBox["x", "\[Beta]"], ")"}], "=", 
   RowBox[{
    SubscriptBox["\[Delta]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]], 
    SubsuperscriptBox["w", "\[Alpha]", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}]]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761910992896945*^9, 3.761911004036776*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   TemplateBox[{
    SubscriptBox["\[Chi]", "\[Alpha]"],SubscriptBox["\[Chi]", "\[Beta]"]},
    "BraKet"], "=", 
   SubscriptBox["\[Delta]", "\[Alpha]\[Beta]"]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761913047985683*^9, 3.761913073777946*^9}},
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[{SubscriptBox["\[Chi]", "\[Alpha]"]},
    "Ket"], TraditionalForm]]],
 " is a \[OpenCurlyDoubleQuote]normalized projection\[CloseCurlyDoubleQuote] \
of the position eigenstate ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{SubscriptBox["x", "\[Alpha]"]},
    "Ket"], TraditionalForm]]],
 "."
}], "Subsubsection",
 CellChangeTimes->{{3.761913136644108*^9, 3.761913168786772*^9}, {
  3.761914076278528*^9, 3.7619141109683657`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "The delta-function picking off ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "\[Alpha]"], TraditionalForm]]],
 " is:"
}], "Text",
 CellChangeTimes->{{3.761913181062509*^9, 3.761913195266204*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Delta]", "(", 
    RowBox[{"x", "-", 
     SubscriptBox["x", "\[Alpha]"]}], ")"}], "=", 
   TemplateBox[{"x",SubscriptBox["x", "\[Alpha]"]},
    "BraKet"]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761913196978956*^9, 3.7619132042412357`*^9}, {
   3.761913282887817*^9, 3.761913297741625*^9}, 3.7619134577244663`*^9},
 TextAlignment->Left,
 TextJustification->0.],

Cell["The projection operator onto the finite basis is:", "Text",
 CellChangeTimes->{{3.761913207837184*^9, 3.7619132158252*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox["P", "^"], "=", 
   RowBox[{
    OverscriptBox[
     UnderscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}]], "n"], 
    RowBox[{
     TemplateBox[{SubscriptBox["\[Phi]", "j"]},
      "Ket"], 
     TemplateBox[{SubscriptBox["\[Phi]", "j"]},
      "Bra"]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761913218064891*^9, 3.7619132447760487`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    OverscriptBox["P", "^"], 
    TemplateBox[{SubscriptBox["x", "\[Alpha]"]},
     "Ket"]}], "=", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}]], "n"], 
     RowBox[{
      TemplateBox[{SubscriptBox["\[Phi]", "j"]},
       "Ket"], 
      TemplateBox[{SubscriptBox["\[Phi]", "j"],SubscriptBox["x", "\[Alpha]"]},
       
       "BraKet"]}]}], "=", 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}]], "n"], 
     RowBox[{
      TemplateBox[{SubscriptBox["\[Phi]", "j"]},
       "Ket"], 
      RowBox[{
       SubscriptBox["\[Phi]", "j"], "\[Conjugate]"}], 
      RowBox[{"(", 
       SubscriptBox["x", "\[Alpha]"], ")"}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761913402085458*^9, 3.761913521101956*^9}, {
  3.761914242185171*^9, 3.761914258307654*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Therefore,", "Text",
 CellChangeTimes->{{3.761913537200323*^9, 3.761913538669733*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     OverscriptBox["P", "^"], 
     TemplateBox[{SubscriptBox["x", "\[Alpha]"]},
      "Ket"]}], 
    RowBox[{"\[LeftDoubleBracket]", 
     RowBox[{
      OverscriptBox["P", "^"], 
      TemplateBox[{SubscriptBox["x", "\[Alpha]"]},
       "Ket"]}], "\[RightDoubleBracket]"}]], "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      OverscriptBox[
       UnderscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}]], "n"], 
      RowBox[{
       TemplateBox[{SubscriptBox["\[Phi]", "j"]},
        "Ket"], 
       RowBox[{
        SubscriptBox["\[Phi]", "j"], "\[Conjugate]"}], 
       RowBox[{"(", 
        SubscriptBox["x", "\[Alpha]"], ")"}]}]}], 
     SqrtBox[
      RowBox[{
       UnderscriptBox["\[Sum]", "j"], 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Phi]", "j"], "(", 
         SubscriptBox["x", "\[Alpha]"], ")"}], 
        RowBox[{
         SubscriptBox["\[Phi]", "j"], "\[Conjugate]"}], 
        RowBox[{"(", 
         SubscriptBox["x", "\[Alpha]"], ")"}]}]}]]], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       OverscriptBox[
        UnderscriptBox["\[Sum]", 
         RowBox[{"j", "=", "1"}]], "n"], 
       RowBox[{
        TemplateBox[{SubscriptBox["\[Phi]", "j"]},
         "Ket"], 
        RowBox[{
         SubscriptBox["\[Phi]", "j"], "\[Conjugate]"}], 
        RowBox[{"(", 
         SubscriptBox["x", "\[Alpha]"], ")"}]}]}], 
      SqrtBox[
       RowBox[{"1", "/", 
        SubscriptBox["w", "\[Alpha]"]}]]], "=", 
     RowBox[{
      RowBox[{
       OverscriptBox[
        UnderscriptBox["\[Sum]", 
         RowBox[{"j", "=", "1"}]], "n"], 
       RowBox[{
        TemplateBox[{SubscriptBox["\[Phi]", "j"]},
         "Ket"], 
        RowBox[{
         SubscriptBox["\[Phi]", "j"], "\[Conjugate]"}], 
        RowBox[{"(", 
         SubscriptBox["x", "\[Alpha]"], ")"}], 
        SqrtBox[
         SubscriptBox["w", "\[Alpha]"]]}]}], "=", 
      TemplateBox[{SubscriptBox["\[Chi]", "\[Alpha]"]},
       "Ket"]}]}]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761913546745268*^9, 3.761913560883727*^9}, {
  3.7619136301879187`*^9, 3.761913762412836*^9}, {3.761913819795845*^9, 
  3.761913825133593*^9}, {3.7619139287162523`*^9, 3.761913939542583*^9}, {
  3.761914027057768*^9, 3.7619140576894836`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "One can think of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{"x",SubscriptBox["\[Chi]", "\[Alpha]"]},
     "BraKet"], "=", 
    RowBox[{
     SubscriptBox["\[Chi]", "\[Alpha]"], "(", "x", ")"}]}], TraditionalForm]]],
 " as the best approximation to the delta function we can have in a finite \
basis. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{SubscriptBox["\[Chi]", "\[Alpha]"]},
     "Ket"], "=", 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}]], "n"], 
     RowBox[{
      TemplateBox[{SubscriptBox["\[Phi]", "j"]},
       "Ket"], 
      RowBox[{
       SubscriptBox["\[Phi]", "j"], "\[Conjugate]"}], 
      RowBox[{"(", 
       SubscriptBox["x", "\[Alpha]"], ")"}], 
      SubsuperscriptBox["w", "\[Alpha]", 
       RowBox[{"1", "/", "2"}]]}]}]}], TraditionalForm]],
  CellChangeTimes->{{3.761910363846676*^9, 3.761910383586598*^9}, {
   3.7619104405150948`*^9, 3.761910456845684*^9}}],
 " is like a unit position vector."
}], "Text",
 CellChangeTimes->{{3.7619141662839813`*^9, 3.761914199092785*^9}, 
   3.761914239284306*^9, {3.761914288060053*^9, 3.761914360379016*^9}, {
   3.7619145094513807`*^9, 3.761914545946705*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Look, for example, at ", "Text",
 CellChangeTimes->{{3.761914361853001*^9, 3.761914369890382*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   TemplateBox[{SubscriptBox["\[Chi]", "\[Alpha]"],"\[Psi]"},
    "BraKet"], "=", 
   RowBox[{
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}]], "n"], 
     RowBox[{
      SubsuperscriptBox["w", "\[Alpha]", 
       RowBox[{"1", "/", "2"}]], 
      RowBox[{
       SubscriptBox["\[Phi]", "j"], "(", 
       SubscriptBox["x", "\[Alpha]"], ")"}], 
      TemplateBox[{SubscriptBox["\[Phi]", "j"],"\[Psi]"},
       "BraKet"]}]}], "=", 
    RowBox[{
     RowBox[{
      OverscriptBox[
       UnderscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}]], "n"], 
      RowBox[{
       SubsuperscriptBox["w", "\[Alpha]", 
        RowBox[{"1", "/", "2"}]], 
       RowBox[{
        SubscriptBox["\[Phi]", "j"], "(", 
        SubscriptBox["x", "\[Alpha]"], ")"}], 
       TemplateBox[{SubscriptBox["\[Phi]", "j"]},
        "Bra"], 
       RowBox[{
        OverscriptBox[
         UnderscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}]], "\[Infinity]"], 
        RowBox[{
         SubscriptBox["a", "k"], 
         TemplateBox[{SubscriptBox["\[Phi]", "k"]},
          "Ket"]}]}]}]}], "=", 
     RowBox[{
      RowBox[{
       OverscriptBox[
        UnderscriptBox["\[Sum]", 
         RowBox[{"k", "=", "1"}]], "\[Infinity]"], 
       RowBox[{
        OverscriptBox[
         UnderscriptBox["\[Sum]", 
          RowBox[{"j", "=", "1"}]], "n"], 
        RowBox[{
         SubsuperscriptBox["w", "\[Alpha]", 
          RowBox[{"1", "/", "2"}]], 
         RowBox[{
          SubscriptBox["\[Phi]", "j"], "(", 
          SubscriptBox["x", "\[Alpha]"], ")"}], 
         SubscriptBox["a", "k"], 
         SubscriptBox["\[Delta]", 
          RowBox[{"j", ",", "k"}]]}]}]}], "=", 
      RowBox[{
       RowBox[{
        OverscriptBox[
         UnderscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}]], "n"], 
        RowBox[{
         SubsuperscriptBox["w", "\[Alpha]", 
          RowBox[{"1", "/", "2"}]], 
         RowBox[{
          SubscriptBox["\[Phi]", "k"], "(", 
          SubscriptBox["x", "\[Alpha]"], ")"}], 
         SubscriptBox["a", "k"]}]}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubsuperscriptBox["w", "\[Alpha]", 
           RowBox[{"1", "/", "2"}]], "[", 
          RowBox[{
           OverscriptBox["P", "^"], "\[Psi]"}], "]"}], 
         RowBox[{"(", 
          SubscriptBox["x", "\[Alpha]"], ")"}]}], "=", 
        SubscriptBox["\[Psi]", "\[Alpha]"]}]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761914378219487*^9, 3.761914471319578*^9}, {
   3.7619145765976562`*^9, 3.761914592031193*^9}, {3.761914705971025*^9, 
   3.761914735356165*^9}, {3.7619193499923697`*^9, 3.761919446989687*^9}, {
   3.7619194821356363`*^9, 3.761919529407527*^9}, 3.761919604571966*^9, {
   3.761919665739623*^9, 3.761919684561907*^9}, {3.761919725466207*^9, 
   3.761919746167284*^9}, {3.761920261679864*^9, 3.761920287820175*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "The final equality ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{SubscriptBox["\[Chi]", "\[Alpha]"],"\[Psi]"},
     "BraKet"], "=", 
    SubscriptBox["\[Psi]", "\[Alpha]"]}], TraditionalForm]]],
 " is only exact if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["P", "^"], "\[Psi]"}], "=", "\[Psi]"}], 
   TraditionalForm]]],
 " (i.e. if \[Psi] is in the basis).  "
}], "Text",
 CellChangeTimes->{{3.7619149907360487`*^9, 3.761915005615737*^9}, {
  3.761920114744841*^9, 3.761920120255991*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Psi]", "\[Alpha]"], "=", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["w", "\[Alpha]", 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"\[Psi]", "(", 
      SubscriptBox["x", "\[Alpha]"], ")"}]}], "=", 
    RowBox[{
     TemplateBox[{SubscriptBox["\[Chi]", "\[Alpha]"],"\[Psi]"},
      "BraKet"], "+", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["w", "\[Alpha]", 
        RowBox[{"1", "/", "2"}]], "[", 
       RowBox[{
        OverscriptBox["Q", "^"], "\[Psi]"}], "]"}], 
      RowBox[{"(", 
       SubscriptBox["x", "\[Alpha]"], ")"}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.761920108978222*^9, 3.761920141236801*^9}, {
  3.761920178782793*^9, 3.761920205464355*^9}, {3.761920241385704*^9, 
  3.761920254891958*^9}, {3.761920297650424*^9, 3.761920300722808*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "The error that is introduced by the truncation to a finite basis is usually \
acceptable because one gains a very efficient method for calculating matrix \
elements.  The potential matrix is diagonal in the DVR basis: (recall ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{SubscriptBox["\[Chi]", "\[Alpha]"]},
     "Ket"], "=", 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}]], "n"], 
     RowBox[{
      TemplateBox[{SubscriptBox["\[Phi]", "j"]},
       "Ket"], 
      SubscriptBox["U", 
       RowBox[{"j", ",", "\[Alpha]"}]]}]}]}], TraditionalForm]],
  CellChangeTimes->{{3.761910232705143*^9, 3.761910307129004*^9}}],
 ")"
}], "Text",
 CellChangeTimes->{{3.761919832641733*^9, 3.76191991765464*^9}, {
  3.761920495248528*^9, 3.761920498770514*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    TemplateBox[{SubscriptBox["\[Chi]", "\[Alpha]"]},
     "Bra"], "V", 
    TemplateBox[{SubscriptBox["\[Chi]", "\[Beta]"]},
     "Ket"]}], "=", 
   RowBox[{
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"\[DifferentialD]", "x"}], " ", 
      RowBox[{
       SubscriptBox["\[Chi]", "\[Alpha]"], "(", "x", ")"}], 
      RowBox[{"V", "(", "x", ")"}], 
      RowBox[{
       SubscriptBox["\[Chi]", "\[Beta]"], "(", "x", ")"}]}]}], "=", 
    RowBox[{
     RowBox[{
      UnderscriptBox["\[Sum]", "\[Gamma]"], 
      RowBox[{
       SubscriptBox["w", "\[Gamma]"], 
       RowBox[{
        SubscriptBox["\[Chi]", "\[Alpha]"], "(", 
        SubscriptBox["x", "\[Gamma]"], ")"}], 
       RowBox[{"V", "(", 
        SubscriptBox["x", "\[Gamma]"], ")"}], 
       RowBox[{
        SubscriptBox["\[Chi]", "\[Beta]"], "(", 
        SubscriptBox["x", "\[Gamma]"], ")"}]}]}], "=", 
     RowBox[{
      SubscriptBox["\[Delta]", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}]], 
      RowBox[{"V", "(", 
       SubscriptBox["x", "\[Alpha]"], ")"}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.76191992774343*^9, 3.7619199542766237`*^9}, {
   3.7619203564849787`*^9, 3.761920446449533*^9}, {3.7619204829121923`*^9, 
   3.76192053706979*^9}, {3.7619207026748657`*^9, 3.761920749806046*^9}, {
   3.761921105846884*^9, 3.761921107358886*^9}, {3.761921144645567*^9, 
   3.76192117944855*^9}, 3.7619212506562443`*^9, {3.761926233658268*^9, 
   3.761926300775288*^9}, {3.7619263621675043`*^9, 3.7619264166544847`*^9}, 
   3.761926465844534*^9, {3.761926573897728*^9, 3.761926585503162*^9}, {
   3.761926702883642*^9, 3.761926738523583*^9}, {3.761926784716851*^9, 
   3.761926832751618*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "This is exact if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", 
    TemplateBox[{SubscriptBox["\[Chi]", "\[Beta]"]},
     "Ket"]}], TraditionalForm]]],
 " is a state exactly described within the basis."
}], "Text",
 CellChangeTimes->{{3.761926899898741*^9, 3.761926909917347*^9}, {
  3.761926993766656*^9, 3.7619270044923887`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[StyleBox["The following 5 statements are equivalent:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.761927032236788*^9, 3.7619270406115503`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["G",
     FontWeight->"Bold"], " ", 
    SuperscriptBox[
     StyleBox["G",
      FontWeight->"Bold"], "\[Dagger]"]}], TraditionalForm]]],
 " is diagonal, where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["G", 
     RowBox[{"\[Alpha]", ",", "j"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Phi]", "j"], "(", 
      SubscriptBox["x", "\[Alpha]"], ")"}], "=", 
     TemplateBox[{SubscriptBox["x", "\[Alpha]"],SubscriptBox["\[Phi]", "j"]},
      "BraKet"]}]}], TraditionalForm]]]
}], "Item1Numbered",
 CellChangeTimes->{{3.7619270548077297`*^9, 3.761927137852778*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["U", 
     RowBox[{"j", ",", "\[Alpha]"}]], "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["w", "\[Alpha]", 
       RowBox[{"1", "/", "2"}]], 
      RowBox[{
       SubsuperscriptBox["\[Phi]", "j", "*"], "(", 
       SubscriptBox["x", "\[Alpha]"], ")"}]}], "=", 
     RowBox[{
      SubsuperscriptBox["w", "\[Alpha]", 
       RowBox[{"1", "/", "2"}]], 
      SubsuperscriptBox["G", 
       RowBox[{"j", ",", "\[Alpha]"}], "*"]}]}]}], TraditionalForm]]],
 " is ",
 StyleBox["unitary.",
  FontSlant->"Italic"]
}], "Item1Numbered",
 CellChangeTimes->{{3.7619270548077297`*^9, 3.761927306141117*^9}, {
  3.761958157387038*^9, 3.761958158992474*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Discrete orthogonality:  , ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Sum]", "\[Alpha]"], 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Phi]", "i"], "\[Conjugate]"}], 
      RowBox[{"(", 
       SubscriptBox["x", "\[Alpha]"], ")"}], 
      RowBox[{
       SubscriptBox["\[Phi]", "j"], "(", 
       SubscriptBox["x", "\[Alpha]"], ")"}], 
      SubscriptBox["w", "\[Alpha]"]}]}], "=", 
    SubscriptBox["\[Delta]", 
     RowBox[{"i", ",", "j"}]], " "}], TraditionalForm]],
  CellChangeTimes->{{3.761908672042843*^9, 3.761908675771068*^9}, {
   3.761908893163396*^9, 3.76190894587868*^9}}]
}], "Item1Numbered",
 CellChangeTimes->{{3.7619270548077297`*^9, 3.761927318969688*^9}, {
  3.761927359553109*^9, 3.761927363906808*^9}, {3.7619274197465076`*^9, 
  3.7619274328069057`*^9}, {3.761927489986951*^9, 3.7619274954358797`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Discrete completeness: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Sum]", "j"], 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Phi]", "j"], "(", 
       SubscriptBox["x", "\[Alpha]"], ")"}], 
      RowBox[{
       SubscriptBox["\[Phi]", "j"], "\[Conjugate]"}], 
      RowBox[{"(", 
       SubscriptBox["x", "\[Beta]"], ")"}]}]}], "=", 
    RowBox[{
     SubsuperscriptBox["w", "\[Alpha]", 
      RowBox[{"-", "1"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}]]}]}], TraditionalForm]]]
}], "Item1Numbered",
 CellChangeTimes->{{3.7619270548077297`*^9, 3.761927318969688*^9}, {
  3.761927359553109*^9, 3.761927395084585*^9}, {3.761927496521557*^9, 
  3.76192751801965*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Discrete ",
 Cell[BoxData[
  FormBox["\[Delta]", TraditionalForm]]],
 " property: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Chi]", "\[Alpha]"], "(", 
     SubscriptBox["x", "\[Beta]"], ")"}], "=", 
    RowBox[{
     SubscriptBox["\[Delta]", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}]], 
     SubsuperscriptBox["w", "\[Alpha]", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]]}]}], TraditionalForm]],
  CellChangeTimes->{{3.761910992896945*^9, 3.761911004036776*^9}}],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{
     SubscriptBox["\[Chi]", "\[Alpha]"],SubscriptBox["\[Chi]", "\[Beta]"]},
     "BraKet"], "=", 
    SubscriptBox["\[Delta]", "\[Alpha]\[Beta]"]}], TraditionalForm]],
  CellChangeTimes->{{3.761913047985683*^9, 3.761913073777946*^9}}],
 "."
}], "Item1Numbered",
 CellChangeTimes->{{3.7619270548077297`*^9, 3.761927318969688*^9}, {
  3.761927359553109*^9, 3.761927395084585*^9}, {3.761927496521557*^9, 
  3.761927564514255*^9}},
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DVR with Gauss-Lobatto quadrature", "Subsection",
 CellChangeTimes->{{3.762007982478735*^9, 3.762007992756712*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Here, I\[CloseCurlyQuote]ll work through the properties of the Lobatto \
shape functions from D. E. Manolopoulos and R. E. Wyatt Chem. Phys. Lett. ",
 StyleBox["152",
  FontWeight->"Bold"],
 " 23 (1988).  These can be used to formulate a DVR with some convenient \
properties."
}], "Text",
 CellChangeTimes->{{3.762007994365142*^9, 3.762008128486454*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["The M-point Lobatto quadrature rule:", "Text",
 CellChangeTimes->{{3.762008165095149*^9, 3.762008199968935*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{
     RowBox[{"f", "(", "R", ")"}], 
     RowBox[{"\[DifferentialD]", "R"}]}]}], "\[TildeTilde]", 
   RowBox[{
    OverscriptBox[
     UnderscriptBox["\[Sum]", 
      RowBox[{"k", "=", "0"}]], 
     RowBox[{"M", "+", "1"}]], 
    RowBox[{
     SubscriptBox["w", "k"], 
     RowBox[{"f", "(", 
      SubscriptBox["R", "k"], ")"}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.762008177329588*^9, 3.762008283870071*^9}, {
  3.7620367714738417`*^9, 3.7620367735901117`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Here, let (different from Manolopoulos and Wyatt) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "0"], "=", "a"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", 
     RowBox[{"M", "+", "1"}]], "=", "b"}], TraditionalForm]]],
 ".  The remaining nodes ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "k"], TraditionalForm]]],
 " and weights ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "k"], TraditionalForm]]],
 " are chosen so as to make the equation above exact for polynomials up to \
degree ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", "M"}], "+", "1"}], TraditionalForm]]],
 ".  For ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "=", "0"}], TraditionalForm]]],
 ", this equation reduces to the trapezoid rule, while for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "=", "1"}], TraditionalForm]]],
 ", it reduces to Simpson\[CloseCurlyQuote]s rule. We\[CloseCurlyQuote]ll \
discuss how to generate these nodes and weights with Mathematica later. "
}], "Text",
 CellChangeTimes->{{3.76200828600025*^9, 3.762008421405158*^9}, {
  3.762008465453402*^9, 3.762008503783567*^9}, {3.76203678345884*^9, 
  3.7620368256682*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
The Lobatto shape functions are defined as the \
\[OpenCurlyDoubleQuote]Lagrangian interpolating polynomials\
\[CloseCurlyDoubleQuote]:\
\>", "Text",
 CellChangeTimes->{{3.76200850920919*^9, 3.762008532717718*^9}, {
  3.762008591463722*^9, 3.762008592574114*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Chi]", "i"], "(", "R", ")"}], "=", 
    RowBox[{
     SubsuperscriptBox["w", "i", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]], 
     RowBox[{
      OverscriptBox[
       UnderscriptBox["\[Product]", 
        RowBox[{
         RowBox[{"j", "\[NotEqual]", "i"}], ",", " ", 
         RowBox[{"j", "=", "0"}]}]], 
       RowBox[{"M", "+", "1"}]], 
      FractionBox[
       RowBox[{"R", "-", 
        SubscriptBox["R", "j"]}], 
       RowBox[{
        SubscriptBox["R", "i"], "-", 
        SubscriptBox["R", "j"]}]]}]}]}], ",", " ", 
   RowBox[{"i", "=", "0"}], ",", "1", ",", "...", ",", 
   RowBox[{"M", "+", "1"}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.762008596895911*^9, 3.762008725278974*^9}, {
  3.762009258307585*^9, 3.762009272306983*^9}, {3.762037153778034*^9, 
  3.7620371602614527`*^9}, {3.762037305702058*^9, 3.762037307294724*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "j"], ",", 
    SubscriptBox["R", "i"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are the ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]],
  FormatType->"TraditionalForm"],
 "-point Lobatto quadrature nodes.  Note that these basis functions qualify \
as a DVR basis because:"
}], "Text",
 CellChangeTimes->{{3.762008728009542*^9, 3.762008810091486*^9}, {
  3.7620092821476793`*^9, 3.762009285546639*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Chi]", "i"], "(", 
     SubscriptBox["R", "j"], ")"}], "=", 
    RowBox[{
     SubsuperscriptBox["w", "i", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]], 
     SubscriptBox["\[Delta]", 
      RowBox[{"j", ",", "i"}]]}]}], TraditionalForm]]],
 ",  To see this clearly, look, for example, at the case for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "=", "1"}], TraditionalForm]]],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Chi]", "1"], "(", "R", ")"}], "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["w", "1", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]], 
      FractionBox[
       RowBox[{"R", "-", 
        SubscriptBox["R", "0"]}], 
       RowBox[{
        SubscriptBox["R", "1"], "-", 
        SubscriptBox["R", "0"]}]], 
      FractionBox[
       RowBox[{"R", "-", 
        SubscriptBox["R", "2"]}], 
       RowBox[{
        SubscriptBox["R", "1"], "-", 
        SubscriptBox["R", "2"]}]]}], "=", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {"0", 
            RowBox[{
             RowBox[{"R", "=", 
              SubscriptBox["R", "0"]}], ",", 
             SubscriptBox["R", "2"]}]},
           {
            SubsuperscriptBox["w", "1", 
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}]], 
            RowBox[{"R", "=", 
             SubscriptBox["R", "1"]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], TraditionalForm]]]
}], "Item1Numbered",
 CellChangeTimes->{{3.7620088235227957`*^9, 3.762008829703274*^9}, {
  3.762008863771824*^9, 3.762008883297876*^9}, {3.762008972332232*^9, 
  3.762009012185944*^9}, {3.762009051887938*^9, 3.762009243793359*^9}, {
  3.762037315051412*^9, 3.7620373570670652`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "The functions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox[
     SubscriptBox["w", "i"]], 
    RowBox[{
     SubscriptBox["\[Chi]", "i"], "(", "R", ")"}]}], TraditionalForm]]],
 " form a complete polynomial basis of degree ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "+", "1"}], TraditionalForm]]],
 ", because any polynomial of degree ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LessEqual]", " ", 
    RowBox[{"M", "+", "1"}]}], TraditionalForm]]],
 " can be expressed as the linear combination: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"M", "+", "1"}]], "(", "R", ")"}], "=", 
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}]], 
      RowBox[{"M", "+", "1"}]], 
     RowBox[{
      SqrtBox[
       SubscriptBox["w", "i"]], 
      RowBox[{
       SubscriptBox["\[Chi]", "i"], "(", "R", ")"}], 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"M", "+", "1"}]], "(", 
       SubscriptBox["R", "i"], ")"}]}]}]}], TraditionalForm]]],
 ".  Specializing this to the case ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"M", "+", "1"}]], "=", "1"}], TraditionalForm]]],
 " gives ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      UnderscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}]], 
      RowBox[{"M", "+", "1"}]], 
     RowBox[{
      SubscriptBox["u", "i"], "(", "R", ")"}]}], "=", "1"}], 
   TraditionalForm]]],
 ".  Testing with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", "2"], "(", "R", ")"}], "=", 
    RowBox[{"1", "+", "R", "+", 
     SuperscriptBox["R", "2"]}]}], TraditionalForm]]],
 ":\[LineSeparator]",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", "2"], "(", "R", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"R", "-", 
         SubscriptBox["R", "1"]}], 
        RowBox[{
         SubscriptBox["R", "0"], "-", 
         SubscriptBox["R", "1"]}]], 
       FractionBox[
        RowBox[{"R", "-", 
         SubscriptBox["R", "2"]}], 
        RowBox[{
         SubscriptBox["R", "0"], "-", 
         SubscriptBox["R", "2"]}]], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["R", "0"], "+", 
         SuperscriptBox[
          SubscriptBox["R", "0"], "2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"R", "-", 
         SubscriptBox["R", "0"]}], 
        RowBox[{
         SubscriptBox["R", "1"], "-", 
         SubscriptBox["R", "0"]}]], 
       FractionBox[
        RowBox[{"R", "-", 
         SubscriptBox["R", "2"]}], 
        RowBox[{
         SubscriptBox["R", "1"], "-", 
         SubscriptBox["R", "2"]}]], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["R", "1"], "+", 
         SuperscriptBox[
          SubscriptBox["R", "1"], "2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"R", "-", 
         SubscriptBox["R", "0"]}], 
        RowBox[{
         SubscriptBox["R", "2"], "-", 
         SubscriptBox["R", "0"]}]], 
       FractionBox[
        RowBox[{"R", "-", 
         SubscriptBox["R", "1"]}], 
        RowBox[{
         SubscriptBox["R", "2"], "-", 
         SubscriptBox["R", "1"]}]], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["R", "2"], "+", 
         SuperscriptBox[
          SubscriptBox["R", "2"], "2"]}], ")"}]}]}], "=", 
     RowBox[{"1", "+", "R", "+", 
      SuperscriptBox["R", "2"]}]}]}], TraditionalForm]],
  CellChangeTimes->{{3.762010015095292*^9, 3.7620101721295567`*^9}}]
}], "Item1Numbered",
 CellChangeTimes->{{3.7620088235227957`*^9, 3.762008829703274*^9}, {
  3.762008863771824*^9, 3.762008883297876*^9}, {3.762008972332232*^9, 
  3.762009012185944*^9}, {3.762009051887938*^9, 3.762009251963601*^9}, {
  3.762009292041953*^9, 3.762009395825913*^9}, {3.762009984690125*^9, 
  3.762010010814315*^9}, {3.7620101202427387`*^9, 3.762010122554927*^9}, {
  3.762010330413232*^9, 3.7620104710864153`*^9}, {3.762037390511889*^9, 
  3.762037413847184*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "Differentiating ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "i"], "(", "R", ")"}], TraditionalForm]]],
 " gives: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", 
      RowBox[{
       SubscriptBox["\[Chi]", "i"], "(", "R", ")"}]}], 
     RowBox[{"\[DifferentialD]", "R"}]], "=", 
    RowBox[{
     SubsuperscriptBox["w", "i", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{"k", "\[NotEqual]", "i"}]], 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{
          SubscriptBox["R", "i"], "-", 
          SubscriptBox["R", "k"]}]], ")"}], 
       RowBox[{"(", 
        RowBox[{
         UnderscriptBox["\[Product]", 
          RowBox[{
           RowBox[{"j", "\[NotEqual]", "i"}], ",", "k"}]], 
         FractionBox[
          RowBox[{"R", "-", 
           SubscriptBox["R", "j"]}], 
          RowBox[{
           SubscriptBox["R", "i"], "-", 
           SubscriptBox["R", "j"]}]]}], ")"}]}]}]}]}], TraditionalForm]]],
 ".  Evaluating at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", 
    SubscriptBox["R", "i"]}], TraditionalForm]]],
 " gives ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", 
      RowBox[{
       SubscriptBox["\[Chi]", "i"], "(", 
       SubscriptBox["R", "i"], ")"}]}], 
     RowBox[{"\[DifferentialD]", "R"}]], "=", 
    RowBox[{
     SubsuperscriptBox["w", "i", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{"k", "\[NotEqual]", "i"}]], 
      RowBox[{"(", 
       FractionBox["1", 
        RowBox[{
         SubscriptBox["R", "i"], "-", 
         SubscriptBox["R", "k"]}]], ")"}]}]}]}], TraditionalForm]]],
 " while evaluating at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", 
    SubscriptBox["R", "k"]}], TraditionalForm]]],
 " gives: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", 
      RowBox[{
       SubscriptBox["\[Chi]", "i"], "(", 
       SubscriptBox["R", "k"], ")"}]}], 
     RowBox[{"\[DifferentialD]", "R"}]], "=", 
    RowBox[{
     SubsuperscriptBox["w", "i", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{"k", "\[NotEqual]", "i"}]], 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{
          SubscriptBox["R", "i"], "-", 
          SubscriptBox["R", "k"]}]], ")"}], 
       RowBox[{"(", 
        RowBox[{
         UnderscriptBox["\[Product]", 
          RowBox[{
           RowBox[{"j", "\[NotEqual]", "i"}], ",", "k"}]], 
         FractionBox[
          RowBox[{
           SubscriptBox["R", "k"], "-", 
           SubscriptBox["R", "j"]}], 
          RowBox[{
           SubscriptBox["R", "i"], "-", 
           SubscriptBox["R", "j"]}]]}], ")"}]}]}]}]}], TraditionalForm]]],
 "."
}], "Item1Numbered",
 CellChangeTimes->{{3.7620088235227957`*^9, 3.762008829703274*^9}, {
  3.762008863771824*^9, 3.762008883297876*^9}, {3.762008972332232*^9, 
  3.762009012185944*^9}, {3.762009051887938*^9, 3.762009251963601*^9}, {
  3.762009292041953*^9, 3.762009395825913*^9}, {3.762009984690125*^9, 
  3.762010010814315*^9}, {3.7620101202427387`*^9, 3.762010122554927*^9}, {
  3.762010330413232*^9, 3.762010431220471*^9}, {3.762010564161125*^9, 
  3.76201060359896*^9}, {3.76201064262075*^9, 3.762010735799502*^9}, {
  3.762010781954269*^9, 3.7620108353315983`*^9}, {3.762010868853477*^9, 
  3.762010963650329*^9}, {3.7620111631624327`*^9, 3.7620111829846087`*^9}, {
  3.762011583514689*^9, 3.762011588852275*^9}, {3.762037445791423*^9, 
  3.76203752169394*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "For the purpose of numerical calculations, the equations in 3. can be \
streamlined to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", 
      RowBox[{
       SubscriptBox["\[Chi]", "i"], "(", 
       SubscriptBox["R", "i"], ")"}]}], 
     RowBox[{"\[DifferentialD]", "R"}]], "=", 
    FractionBox[
     RowBox[{
      SubscriptBox["\[Delta]", 
       RowBox[{"i", ",", "0"}]], "-", 
      SubscriptBox["\[Delta]", 
       RowBox[{"i", ",", 
        RowBox[{"M", "+", "1"}]}]]}], 
     RowBox[{"2", 
      SubsuperscriptBox["w", "i", 
       RowBox[{"3", "/", "2"}]]}]]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", 
      RowBox[{
       SubscriptBox["\[Chi]", "i"], "(", 
       SubscriptBox["R", "j"], ")"}]}], 
     RowBox[{"\[DifferentialD]", "R"}]], "=", 
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       FractionBox[
        SubscriptBox["w", "i"], 
        SubscriptBox["w", "j"]]]}], 
     FractionBox[
      RowBox[{"\[DifferentialD]", 
       RowBox[{
        SubscriptBox["\[Chi]", "j"], "(", 
        SubscriptBox["R", "i"], ")"}]}], 
      RowBox[{"\[DifferentialD]", "R"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"for", " ", "j"}], "\[NotEqual]", "i"}], ")"}]}]}], 
   TraditionalForm]]],
 ".  Manalopolous and Wyatt claim that these equations can be proven by \
integrating ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Chi]", "i"], "'"}], 
     RowBox[{"(", "R", ")"}], 
     RowBox[{
      SubscriptBox["\[Chi]", "j"], "(", "R", ")"}]}], "+", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Chi]", "i"], "(", "R", ")"}], 
     RowBox[{
      SubscriptBox["\[Chi]", "j"], "'"}], 
     RowBox[{"(", "R", ")"}]}]}], TraditionalForm]]],
 " from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", 
    RowBox[{
     RowBox[{"a", " ", "to", " ", "R"}], "=", "b"}]}], TraditionalForm]]],
 " both formally and using the quadrature rule.  I won\[CloseCurlyQuote]t go \
through that here."
}], "Item1Numbered",
 CellChangeTimes->{{3.7620088235227957`*^9, 3.762008829703274*^9}, {
  3.762008863771824*^9, 3.762008883297876*^9}, {3.762008972332232*^9, 
  3.762009012185944*^9}, {3.762009051887938*^9, 3.762009251963601*^9}, {
  3.762009292041953*^9, 3.762009395825913*^9}, {3.762009984690125*^9, 
  3.762010010814315*^9}, {3.7620101202427387`*^9, 3.762010122554927*^9}, {
  3.762010330413232*^9, 3.762010431220471*^9}, {3.762010564161125*^9, 
  3.76201060359896*^9}, {3.76201064262075*^9, 3.762010735799502*^9}, {
  3.762010781954269*^9, 3.7620108353315983`*^9}, {3.762010868853477*^9, 
  3.762010963650329*^9}, {3.7620111631624327`*^9, 3.7620111829846087`*^9}, {
  3.762011583514689*^9, 3.76201167890795*^9}, {3.7620118036207657`*^9, 
  3.762011859539068*^9}, {3.762011893143111*^9, 3.762011986494491*^9}, {
  3.762037648064176*^9, 3.762037685977306*^9}, {3.762037723843741*^9, 
  3.762037756646413*^9}},
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]],

Cell["Okay, let\[CloseCurlyQuote]s code up what these look like!", "Text",
 CellChangeTimes->{{3.762012474244833*^9, 3.762012492095817*^9}, {
  3.7620370989681053`*^9, 3.762037102239688*^9}},
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lobatto nodes and weights", "Subsection",
 CellChangeTimes->{{3.762012532198215*^9, 3.762012544397738*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "The free abscissa are the nodes of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", 
    RowBox[{"M", "-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", 
    RowBox[{"M", "-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is a Legendre polynomial of order ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "-", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.762012792186956*^9, 3.7620128296191683`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["First define the DVR basis functions:", "Text",
 CellChangeTimes->{{3.762013735335517*^9, 3.762013767761855*^9}, 
   3.762016503574559*^9, {3.762019304214798*^9, 3.7620193388007708`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Chi]GL", "[", 
   RowBox[{"nodes_", ",", "i_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Product", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"x", "-", 
       RowBox[{"nodes", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], 
      RowBox[{
       RowBox[{"nodes", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "-", 
       RowBox[{"nodes", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], 
   RowBox[{"Product", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"x", "-", 
       RowBox[{"nodes", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], 
      RowBox[{
       RowBox[{"nodes", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "-", 
       RowBox[{"nodes", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"i", "+", "1"}], ",", 
       RowBox[{"M", "+", "2"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.762013570566304*^9, 3.762013662264132*^9}, {
   3.762013709989736*^9, 3.76201372720238*^9}, {3.76201891027323*^9, 
   3.762018914105336*^9}, {3.762037768262383*^9, 3.762037848070327*^9}, {
   3.762037878308598*^9, 3.762037967961276*^9}, {3.762038175156711*^9, 
   3.762038185241817*^9}, 3.762038228033945*^9, {3.762038836186309*^9, 
   3.76203883847405*^9}, {3.762039537469914*^9, 3.762039549812489*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Calculate the weights, abscissa for the range 0,1", "Text",
 CellChangeTimes->{{3.76201937380667*^9, 3.762019391700808*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "=", "50"}], ";", 
  RowBox[{"precision", "=", "20"}], ";", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xnodes", ",", "wn", ",", "errwn"}], "}"}], "=", 
   RowBox[{"NIntegrate`LobattoRuleData", "[", 
    RowBox[{
     RowBox[{"M", "+", "2"}], ",", "precision"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7620190582536573`*^9, {3.7620192709495087`*^9, 3.762019272348468*^9}, {
   3.7620196724520206`*^9, 3.762019672567423*^9}, {3.76202011217623*^9, 
   3.7620201314907293`*^9}, {3.7620379763577538`*^9, 
   3.7620379917591553`*^9}, {3.762038030638401*^9, 3.76203807828283*^9}, {
   3.762039857925447*^9, 3.762039858396723*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[TextData[{
 "To re-scale these to an arbitrary range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    RowBox[{"[", 
     RowBox[{"a", ",", "b"}], "]"}]}], TraditionalForm]]],
 " we multiply the abscissa by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], "\[Rule]", 
    RowBox[{"a", "+", 
     RowBox[{
      SubscriptBox["x", "i"], " ", 
      RowBox[{"(", 
       RowBox[{"b", "-", "a"}], ")"}]}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.7620159236025867`*^9, 3.762015998718416*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"-", "7"}]}], ";", 
  RowBox[{"b", "=", "7"}], ";", 
  RowBox[{"xn", "=", 
   RowBox[{
    RowBox[{"xnodes", 
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}]}], "+", "a"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7620192930627937`*^9, 3.762019405998124*^9, {3.7620201734425507`*^9, 
   3.762020175671772*^9}, {3.762038013262514*^9, 3.762038023411824*^9}, {
   3.762038058071969*^9, 3.762038064711645*^9}, {3.7620419014276953`*^9, 
   3.7620419056298227`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Initialize the basis and plot it", "Text",
 CellChangeTimes->{{3.7620194182001677`*^9, 3.762019423467361*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Chi]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"wn", "[", 
        RowBox[{"[", "i", "]"}], "]"}], 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]], 
      RowBox[{"\[Chi]GL", "[", 
       RowBox[{"xn", ",", "i", ",", 
        RowBox[{"xn", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"M", "+", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"M", "+", "2"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.762018946831622*^9, 3.762018971419956*^9}, {
   3.762019706528254*^9, 3.7620197086316147`*^9}, {3.762019925806753*^9, 
   3.7620199475118837`*^9}, 3.762020141452757*^9, {3.762038100354287*^9, 
   3.762038121373167*^9}, {3.7620382612038813`*^9, 3.762038261769865*^9}, {
   3.762038845674164*^9, 3.7620388638054523`*^9}, {3.7620395819173*^9, 
   3.762039587722514*^9}, {3.762041099721074*^9, 3.762041124429393*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
What does this look like if we try a ListPlot with just the abscissa as the \
points?\
\>", "Text",
 CellChangeTimes->{{3.76203834040666*^9, 3.762038370044805*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"xn", ",", 
        RowBox[{"\[Chi]", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"M", "+", "2"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762038374286809*^9, 3.76203856620737*^9}, {
   3.762038609527934*^9, 3.7620387568058643`*^9}, 3.762038871411653*^9, {
   3.7620392017177763`*^9, 3.7620392022169724`*^9}, 3.762041145837984*^9, {
   3.7620411873343067`*^9, 3.762041189342381*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB16bXSrbsN/TYcFau3tab6QPwGTKV1rFTtuL
4GdWPXk1pQTBn9pm0ZQriODriS28VDdFCs7f98nqpf0/STjfSGjNI3t/BL/a
6mCWaocEnD9jqoDCupXicL4nv/2DtVvE4Pxu4Wn/eFeJwvn283+knukSgfND
ddSX/woXhvNPXXf+skdICM7fsWYyl+ceATjfbJWA+KnVfHC+d2FEz5mD3HD+
/XNGT+L3csD5/rFJu5IXssL5B+LWSp0rYILzj81+ERsY+28/jJ/50mir9J7v
cL761a/d3iwf4fyYX7bFvRVP4Hzm3RYqIiGn0fn2aOrt0cyD86H2wflQ98D5
UPc6oPkHzof6F86HhgecDw0vOB8annA+NLzhfGh8wPnQ+ILzofEJ50PjG86H
pgc4H5pe4HxoeoLzoekNzoemRzgfml7hfGh6hvOh6R3Oh+YHOB8CZOB8APpK
wmE=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kT7AGbxDUu+AiUP5SqvYaXul
4fKZVU9eTSlB8Ke2WTTlCiL4emILL9VNkYLz932yemn/TxLONxJa88jeH8Gv
tjqYpdohAefPmCqgsG6lOJzvyW//YO0WMTi/W3jaP95VonC+/fwfqWe6ROD8
UB315b/CheH8U9edv+wREoLzd6yZzOW5RwDON1slIH5qNR+c710Y0XPmIDec
f/+c0ZP4vRxwvn9s0q7khaxw/oG4tVLnCpjg/GOzX8QGxv7bD+NnvjTaKr3n
O5yvfvVrtzfLRzg/5pdtcW/FEzifebeFikjIaXS+PZp6ezTz4HyofXA+1D1w
PtS9Dmj+gfOh/oXzoeEB50PDC86HhiecDw1vOB8aH3A+NL7gfGh8wvnQ+Ibz
oekBzoemFzgfmp7gfGh6g/Oh6RHOh6ZXOB+anuF8aHqH86H5Ac6HABk4HwD4
v8CP
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bK32gQyExJfSr
nkNm1ZNXU0oQ8lPbLJpyBRF8PbGFl+qmSMH5+z5ZvbT/JwnnGwmteWTvj+BX
Wx3MUu2QgPNnTBVQWLdSHM735Ld/sHaLGJzfLTztH+8qUTjffv6P1DNdInB+
qI768l/hwnD+qevOX/YICcH5O9ZM5vLcIwDnm60SED+1mg/O9y6M6DlzkBvO
v3/O6En8Xg443z82aVfyQlY4/0DcWqlzBUxw/rHZL2IDY//th/EzXxptld7z
Hc5Xv/q125vlI5wf88u2uLfiCZzPvNtCRSTkNDrfHk29PZp5cD7UPjgf6h44
H+peBzT/wPlQ/8L50PCA86HhBedDwxPOh4Y3nA+NDzgfGl9wPjQ+4XxofMP5
0PQA50PTC5wPTU9wPjS9wfnQ9AjnQ9MrnA9Nz3A+NL3D+dD8AOdDgAycDwCe
fMEl
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaVE
+oDJIeuNiWc1Haa2WTTlCiLk9cQWXqqbIgXn7/tk9dL+nyScbyS05pG9P4Jf
bXUwS7VDAs6fMVVAYd1KcTjfk9/+wdotYnB+t/C0f7yrROF8+/k/Us90icD5
oTrqy3+FC8P5p647f9kjJATn71gzmctzjwCcb7ZKQPzUaj4437swoufMQW44
//45oyfxezngfP/YpF3JC1nh/ANxa6XOFTDB+cdmv4gNjP23Hx5eL422Su/5
DuerX/3a7c3yEc6P+WVb3FvxBM5n3m2hIhJyGp1vj6beHs08OB9qH5wPdQ+c
D3WvA5p/4Hyof+F8aHjA+dDwgvOh4QnnQ8MbzofGB5wPjS84HxqfcD40vuF8
aHqA86HpBc6Hpic4H5re4HxoeoTzoekVzoemZzgfmt7hfGh+gPMhQAbOBwBq
VMF5
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUKyh9IEIuo2fLXDUHPbGFl+qmSMHl932yemn/TxLONxJa88jeH8Gv
tjqYpdohAefPmCqgsG6lOJzvyW//YO0WMTi/W3jaP95VonC+/fwfqWe6ROD8
UB315b/CheH8U9edv+wREoLzd6yZzOW5RwDON1slIH5qNR+c710Y0XPmIDec
f/+c0ZP4vRxwvn9s0q7khaxw/oG4tVLnCpjg/GOzX8QGxv7bDw+vl0Zbpfd8
h/PVr37t9mb5COfH/LIt7q14Aucz77ZQEQk5jc63R1Nvj2YenA+1D86HugfO
h7rXAc0/cD7Uv3A+NDzgfGh4wfnQ8ITzoeEN50PjA86HxhecD41POB8a33A+
ND3A+dD0AudD0xOcD01vcD40PcL50PQK50PTM5wPTe9wPjQ/wPkQIAPnAwAt
5MEh
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RerA7E/P5i/LUHHY98nqpf0/Sbi8kdCaR/b+CH61
1cEs1Q4JOH/GVAGFdSvF4XxPfvsHa7eIwfndwtP+8a4ShfPt5/9IPdMlAueH
6qgv/xUuDOefuu78ZY+QEJy/Y81kLs89AnC+2SoB8VOr+eB878KInjMHueH8
++eMnsTv5YDz/WOTdiUvZIXzD8StlTpXwATnH5v9IjYw9t9+eHi9NNoqvec7
nK9+9Wu3N8tHOD/ml21xb8UTOJ95t4WKSMhpdL49mnp7NPPgfKh9cD7UPXA+
1L0OaP6B86H+hfOh4QHnQ8MLzoeGJ5wPDW84HxofcD40vuB8aHzC+dD4hvOh
6QHOh6YXOB+anuB8aHqD86HpEc6Hplc4H5qe4XxoeofzofkBzocAGTgfAAMM
woQ=
      "]]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P8kDb688495xVMnBSGjNI3t/Sbh8
tdXBLNUOCTh/xlQBhXUrxeF8T377B2u3iMH53cLT/vGuEoXz7ef/SD3TJQLn
h+qoL/8VLgznn7ru/GWPkBCcv2PNZC7PPQJwvtkqAfFTq/ngfO/CiJ4zB7nh
/PvnjJ7E7+WA8/1jk3YlL2SF8w/ErZU6V8AE5x+b/SI2MPbffnh4vTTaKr3n
O5yvfvVrtzfLRzg/5pdtcW/FEzifebeFikjIaXS+PZp6ezTz4HyofXA+1D1w
PtS9Dmj+gfOh/oXzoeEB50PDC86HhiecDw1vOB8aH3A+NL7gfGh8wvnQ+Ibz
oekBzoemFzgfmp7gfGh6g/Oh6RHOh6ZXOB+anuF8aHqH86H5Ac6HABk4HwDf
gsKR
      "]]}, 
    {RGBColor[1, 0.75, 0], PointSize[0.003666666666666667], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7f8kDn6U7lr1rUHSo
tjqYpdohAZefMVVAYd1KcTjfk9/+wdotYnB+t/C0f7yrROF8+/k/Us90icD5
oTrqy3+FC8P5p647f9kjJATn71gzmctzjwCcb7ZKQPzUaj4437swoufMQW44
//45oyfxezngfP/YpF3JC1nh/ANxa6XOFTDB+cdmv4gNjP23Hx5eL422Su/5
DuerX/3a7c3yEc6P+WVb3FvxBM5n3m2hIhJyGp1vj6beHs08OB9qH5wPdQ+c
D3WvA5p/4Hyof+F8aHjA+dDwgvOh4QnnQ8MbzofGB5wPjS84HxqfcD40vuF8
aHqA86HpBc6Hpic4H5re4HxoeoTzoekVzoemZzgfmt7hfGh+gPMhQAbOBwAh
3sIL
      "]]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHxAH+
1e+OK9cqOMyYKqCwbqU4XN6T3/7B2i1icH638LR/vKtE4Xz7+T9Sz3SJwPmh
OurLf4ULw/mnrjt/2SMkBOfvWDOZy3OPAJxvtkpA/NRqPjjfuzCi58xBbjj/
/jmjJ/F7OeB8/9ikXckLWeH8A3Frpc4VMMH5x2a/iA2M/bcfHl4vjbZK7/kO
56tf/drtzfIRzo/5ZVvcW/EEzmfebaEiEnIanW+Ppt4ezTw4H2ofnA91D5wP
da8Dmn/gfKh/4XxoeMD50PCC86HhCedDwxvOh8YHnA+NLzgfGp9wPjS+4Xxo
eoDzoekFzoemJzgfmt7gfGh6hPOh6RXOh6ZnOB+a3uF8aH6A8yFABs4HADpy
wW8=
      "]]}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4gfyvtxdoxAo7+DJb/9g7RYxuHy38LR/vKtE4Xz7+T9Sz3SJwPmh
OurLf4ULw/mnrjt/2SMkBOfvWDOZy3OPAJxvtkpA/NRqPjjfuzCi58xBbjj/
/jmjJ/F7OeB8/9ikXckLWeH8A3Frpc4VMMH5x2a/iA2M/bcfHl4vjbZK7/kO
56tf/drtzfIRzo/5ZVvcW/EEzmfebaEiEnIanW+Ppt4ezTw4H2ofnA91D5wP
da8Dmn/gfKh/4XxoeMD50PCC86HhCedDwxvOh8YHnA+NLzgfGp9wPjS+4Xxo
eoDzoekFzoemJzgfmt7gfGh6hPOh6RXOh6ZnOB+a3uF8aH6A8yFABs4HAM56
wbs=
      "]]}, 
    {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxA7E17dFhL+XdegWnvaPd5UoXN5+/o/UM10icH6o
jvryX+HCcP6p685f9ggJwfk71kzm8twjAOebrRIQP7WaD873LozoOXOQG86/
f87oSfxeDjjfPzZpV/JCVjj/QNxaqXMFTHD+sdkvYgNj/+2Hh9dLo63Se77D
+epXv3Z7s3yE82N+2Rb3VjyB85l3W6iIhJxG59ujqbdHMw/Oh9oH50PdA+dD
3euA5h84H+pfOB8aHnA+NLzgfGh4wvnQ8IbzofEB50PjC86HxiecD41vOB+a
HuB8aHqB86HpCc6Hpjc4H5oe4XxoeoXzoekZzoemdzgfmh/gfAiQgfMBolTB
Xw==
      "]]}, 
    {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
     0.003666666666666667], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXiR74N1uN2eqojIP9/B+pZ7pE4PKh
OurLf4ULw/mnrjt/2SMkBOfvWDOZy3OPAJxvtkpA/NRqPjjfuzCi58xBbjj/
/jmjJ/F7OeB8/9ikXckLWeH8A3Frpc4VMMH5x2a/iA2M/bcfHl4vjbZK7/kO
56tf/drtzfIRzo/5ZVvcW/EEzmfebaEiEnIanW+Ppt4ezTw4H2ofnA91D5wP
da8Dmn/gfKh/4XxoeMD50PCC86HhCedDwxvOh8YHnA+NLzgfGp9wPjS+4Xxo
eoDzoekFzoemJzgfmt7gfGh6hPOh6RXOh6ZnOB+a3uF8aH6A8yFABs4HAMg0
wR0=
      "]]}, 
    {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
     PointSize[0.003666666666666667], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEjngtVlTY/NxaYdQ
HfXlv8KF4fKnrjt/2SMkBOfvWDOZy3OPAJxvtkpA/NRqPjjfuzCi58xBbjj/
/jmjJ/F7OeB8/9ikXckLWeH8A3Frpc4VMMH5x2a/iA2M/bcfHl4vjbZK7/kO
56tf/drtzfIRzo/5ZVvcW/EEzmfebaEiEnIanW+Ppt4ezTw4H2ofnA91D5wP
da8Dmn/gfKh/4XxoeMD50PCC86HhCedDwxvOh8YHnA+NLzgfGp9wPjS+4Xxo
eoDzoekFzoemJzgfmt7gfGh6hPOh6RXOh6ZnOB+a3uF8aH6A8yFABs4HAKK/
wSM=
      "]]}, 
    {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
     0.003666666666666667], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KFz4Q
yrRm6cZ3Ug6nrjt/2SMkBJffsWYyl+ceATjfbJWA+KnVfHC+d2FEz5mD3HD+
/XNGT+L3csD5/rFJu5IXssL5B+LWSp0rYILzj81+ERsY+28/PLxeGm2V3vMd
zle/+rXbm+UjnB/zy7a4t+IJnM+820JFJOQ0Ot8eTb09mnlwPtQ+OB/qHjgf
6l4HNP/A+VD/wvnQ8IDzoeEF50PDE86HhjecD40POB8aX3A+ND7hfGh8w/nQ
9ADnQ9MLnA9NT3A+NL3B+dD0COdD0yucD03PcD40vcP50PwA50OADJwPAJ1N
waE=
      "]]}, 
    {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
     0.003666666666666667], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSOjAIYk3/YYmUg471kzm8twjAJc3WyUgfmo1H5zvXRjRc+YgN5x/
/5zRk/i9HHC+f2zSruSFrHD+gbi1UucKmOD8Y7NfxAbG/tsPD6+XRlul93yH
89Wvfu32ZvkI58f8si3urXgC5zPvtlARCTmNzrdHU2+PZh6cD7UPzoe6B86H
utcBzT9wPtS/cD40POB8aHjB+dDwhPOh4Q3nQ+MDzofGF5wPjU84HxrfcD40
PcD50PQC50PTE5wPTW9wPjQ9wvnQ9ArnQ9MznA9N73A+ND/A+RAgA+cDAB4E
wRQ=
      "]]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHoED04MMHsyfLOlgtkpA/NRqPri8d2FEz5mD3HD+
/XNGT+L3csD5/rFJu5IXssL5B+LWSp0rYILzj81+ERsY+28/PLxeGm2V3vMd
zle/+rXbm+UjnB/zy7a4t+IJnM+820JFJOQ0Ot8eTb09mnlwPtQ+OB/qHjgf
6l4HNP/A+VD/wvnQ8IDzoeEF50PDE86HhjecD40POB8aX3A+ND7hfGh8w/nQ
9ADnQ9MLnA9NT3A+NL3B+dD0COdD0yucD03PcD40vcP50PwA50OADJwPAOkC
wYQ=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XwH2hNcBUs4JR28CyN6zhzkhsvf
P2f0JH4vB5zvH5u0K3khK5x/IG6t1LkCJjj/2OwXsYGx//bDw+ul0VbpPd/h
fPWrX7u9WT7C+TG/bIt7K57A+cy7LVREQk6j8+3R1NujmQfnQ+2D86HugfOh
7nVA8w+cD/UvnA8NDzgfGl5wPjQ84XxoeMP50PiA86HxBedD4xPOh8Y3nA9N
D3A+NL3A+dD0BOdD0xucD02PcD40vcL50PQM50PTO5wPzQ9wPgTIwPkAg3DA
Ew==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9wHji85wPt6koTD
/XNGT+L3csDl/WOTdiUvZIXzD8StlTpXwATnH5v9IjYw9t9+eHi9NNoqvec7
nK9+9Wu3N8tHOD/ml21xb8UTOJ95t4WKSMhpdL49mnp7NPPgfKh9cD7UPXA+
1L0OaP6B86H+hfOh4QHnQ8MLzoeGJ5wPDW84HxofcD40vuB8aHzC+dD4hvOh
6QHOh6YXOB+anuB8aHqD86HpEc6Hplc4H5qe4XxoeofzofkBzocAGTgfAJ/b
wg0=
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93Ic
MPCYlnddV8LBPzZpV/JCVrj8gbi1UucKmOD8Y7NfxAbG/tsPD6+XRlul93yH
89Wvfu32ZvkI58f8si3urXgC5zPvtlARCTmNzrdHU2+PZh6cD7UPzoe6B86H
utcBxof6B86H+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50PiC86HxCedD4xvO
h6YHOB+aXuB8aHqC86HpDc6Hpkc4H5pe4XxoeobzoekdzofmBzgfAmTgfADZ
vMDY
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7IeELa9eKL+hrjDgbi1UucKmODyx2a/iA2M/bcfHl4vjbZK7/kO
56tf/drtzfIRzo/5ZVvcW/EEzmfebaEiEnIanW+Ppt4ezTw4H2ofnA91D5wP
da8Dmn/gfKh/4XxoeMD50PCC86HhCedDwxvOh8YHnA+NLzgfGp9wPjS+4Xxo
eoDzoekFzoemJzgfmt7gfGh6hPOh6RXOh6ZnOB+a3uF8aH6A8yFABs4HACzo
wZc=
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2A6IJvY0NI2Udzh2OwXsYGx//bDw+ul0VbpPd/h
fPWrX7u9WT7C+TG/bIt7K57A+cy7LVREQk6j8+3R1NujmQfnQ+2D86HugfOh
7nVA8w+cD/UvnA8NDzgfGl5wPjQ84XxoeMP50PiA86HxBedD4xPOh8Y3nA9N
D3A+NL3A+dD0BOdD0xucD02PcD40vcL50PQM50PTO5wPzQ9wPgTIwPkArSPA
8A==
      "]]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvf49gU/iNcHGHzJdGW6X3fN8P
k1e/+rXbm+UjnB/zy7a4t+IJnM+820JFJOQ0Ot8eTb09mnlwPtQ+OB/qHjgf
6l4HNP/A+VD/wvnQ8IDzoeEF50PDE86HhjecD40POB8aX3A+ND7hfGh8w/nQ
9ADnQ9MLnA9NT3A+NL3B+dD0COdD0yucD03PcD40vcP50PwA50OADJwPAJWw
wPw=
      "]]}, 
    {RGBColor[1, 0.75, 0], PointSize[0.003666666666666667], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se7/vTBBTq52uJ
O6hf/drtzfIRLh/zy7a4t+IJnM+820JFJOQ0Ot8eTT2cDzUPzofaB+dD3QPn
Q93rgOYfOB/qXzgfGh5wPjS84HxoeML50PCG86HxAedD4wvOh8YnnA+Nbzgf
mh7gfGh6gfOh6QnOh6Y3OB+aHuF8aHqF86HpGc6Hpnc4H5of4HwIkIHzAfj8
wDU=
      "]]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H/f/WPSm1IpT3CHml21xb8UTuDzzbgsVkZDT6Hx7GB+q3h7NPDgfah+cD3UP
nA91rwOaf+B8qH/hfGh4wPnQ8ILzoeEJ50PDG86HxgecD40vOB8an3A+NL7h
fGh6gPOh6QXOh6YnOB+a3uB8aHqE86HpFc6Hpmc4H5re4XxofoDzIUAGzgcA
SQbBlQ==
      "]]}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT/bP6mj0Nf0s5sC820JFJOQ0XB7Kt0dTb49mHpwPtQ/Oh7oH
zoe61wHNP3A+1L9wPjQ84HxoeMH50PCE86HhDedD4wPOh8YXnA+NTzgfGt9w
PjQ9wPnQ9ALnQ9MTnA9Nb3A+ND3C+dD0CudD0zOcD03vcD40P8D5ECAD5wMA
yY/Bbg==
      "]]}, 
    {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp/dL7K2Sdn0h5gDl26Opt0czD86H2gfnQ90D
50Pd64DmHzgf6l84HxoecD40vOB8aHjC+dDwhvOh8QHnQ+MLzofGJ5wPjW84
H5oe4HxoeoHzoekJzoemNzgfmh7hfGh6hfOh6RnOh6Z3OB+aH+B8CJCB8wG9
XsDt
      "]]}, 
    {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
     0.003666666666666667], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59hJ7q6RdX4g5QNXbo5kH50Ptg/Oh7oHz
oe51QPMPnA/1L5wPDQ84HxpecD40POF8aHjD+dD4gPOh8QXnQ+MTzofGN5wP
TQ9wPjS9wPnQ9ATnQ9MbnA9Nj3A+NL3C+dD0DOdD0zucD80PcD4EyMD5AI6O
wO0=
      "]]}, 
    {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
     PointSize[0.003666666666666667], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7Wd1NPqafhZzgJoHl4faB+dD3QPn
Q93rgOYfOB/qXzgfGh5wPjS84HxoeML50PCG86HxAedD4wvOh8YnnA+Nbzgf
mh7gfGh6gfOh6QnOh6Y3OB+aHuF8aHqF86HpGc6Hpnc4H5of4HwIkIHzASTv
wW4=
      "]]}, 
    {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
     0.003666666666666667], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMs/+x6E2pFae4A9Q+uDzUPXA+
1L0OaP6B86H+hfOh4QHnQ8MLzoeGJ5wPDW84HxofcD40vuB8aHzC+dD4hvOh
6QHOh6YXOB+anuB8aHqD86HpEc6Hplc4H5qe4XxoeofzofkBzocAGTgfACpn
wZU=
      "]]}, 
    {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
     0.003666666666666667], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9tmnCSjUz9cSd4C6By4P
da8Dmn/gfKh/4XxoeMD50PCC86HhCedDwxvOh8YHnA+NLzgfGp9wPjS+4Xxo
eoDzoekFzoemJzgfmt7gfGh6hPOh6RXOh6ZnOB+a3uF8aH6A8yFABs4HAAHM
wDU=
      "]]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfY9wg2hd8IF3eA
utcBzT9wPtS/cD40POB8aHjB+dDwhPOh4Q3nQ+MDzofGF5wPjU84HxrfcD40
PcD50PQC50PTE5wPTW9wPjQ9wvnQ9ArnQ9MznA9N73A+ND/A+RAgA+cDAOfS
wPw=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OsgmNrS0
TRR3gPrHAc2/cD40POB8aHjB+dDwhPOh4Q3nQ+MDzofGF5wPjU84HxrfcD40
PcD50PQC50PTE5wPTW9wPjQ9wvnQ9ArnQ9MznA9N73A+ND/A+RAgA+cDAKgF
wPA=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5x0HY
9uKJ+hviDlD/wuWh4QHnQ8MLzoeGJ5wPDW84HxofcD40vuB8aHzC+dD4hvOh
6QHOh6YXOB+anuB8aHqD86HpEc6Hplc4H5qe4XxoeofzofkBzocAGTgfAEIL
wZc=
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+tfBwGNa3nVdCQdoeMDloeEF50PDE86HhjecD40POB8aX3A+ND7hfGh8w/nQ
9ADnQ9MLnA9NT3A+NL3B+dD0COdD0yucD03PcD40vcP50PwA50OADJwPAC8e
wNg=
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4aHw/ElB3hfT5JwgIYXXB4annA+NLzhfGh8wPnQ+ILzofEJ50PjG86H
pgc4H5pe4HxoeoLzoekNzoemRzgfml7hfGh6hvOh6R3Oh+YHOB8CZOB8AFHP
wg0=
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NL4f2BFfBEk5JB2h4wuWh4Q3nQ+MDzofGF5wPjU84HxrfcD40
PcD50PQC50PTE5wPTW9wPjQ9wvnQ9ArnQ9MznA9N73A+ND/A+RAgA+cDAAzC
wBM=
      "]]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp4O04MMHsyfLOkADW+4PDQ+4HxofMH50PiE86HxDedD
0wOcD00vcD40PcH50PQG50PTI5wPTa9wPjQ9w/nQ9A7nQ/MDnA8BMnA+AEuG
wYQ=
      "]]}, 
    {RGBColor[1, 0.75, 0], PointSize[0.003666666666666667], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS8HQ5JvOk3NJFygMYHXB4aX3A+ND7hfGh8w/nQ
9ADnQ9MLnA9NT3A+NL3B+dD0COdD0yucD03PcD40vcP50PwA50OADJwPALD5
wRQ=
      "]]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofDiEMq1ZuvGdlAM0vuDy0PiE86HxDedD
0wOcD00vcD40PcH50PQG50PTI5wPTa9wPjQ9w/nQ9A7nQ/MDnA8BMnA+APFj
waE=
      "]]}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50Phy8NqsqbH5uLQDND7h8tD4hvOh
6QHOh6YXOB+anuB8aHqD86HpEc6Hplc4H5qe4XxoeofzofkBzocAGTgfAFdk
wSM=
      "]]}, 
    {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50PiC86Hx6fBvthqz1VEZB2h8w+Wh
6QHOh6YXOB+anuB8aHqD86HpEc6Hplc4H5qe4XxoeofzofkBzocAGTgfACNZ
wR0=
      "]]}, 
    {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
     0.003666666666666667], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50PiC86HxCedD49shvr4tIvy9rAM0
PcDloekFzoemJzgfmt7gfGh6hPOh6RXOh6ZnOB+a3uF8aH6A8yFABs4HABnq
wV8=
      "]]}, 
    {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
     PointSize[0.003666666666666667], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50PiC86HxCedD4xvOh6YHh7wvd9co
BMo7QNMLXB6anuB8aHqD86HpEc6Hplc4H5qe4XxoeofzofkBzocAGTgfABxh
wbs=
      "]]}, 
    {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
     0.003666666666666667], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50PiC86HxCedD4xvOh6YHOB+aXhz4
V787rlyr4ABNT3B5aHqD86HpEc6Hplc4H5qe4XxoeofzofkBzocAGTgfALcq
wW8=
      "]]}, 
    {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
     0.003666666666666667], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50PiC86HxCedD4xvOh6YHOB+aXuB8
aHpy+Czdsexdg6IDNL3B5aHpEc6Hplc4H5qe4XxoeofzofkBzocAGTgfAMfY
wgs=
      "]]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50PiC86HxCedD4xvOh6YHOB+aXuB8
aHqC86HpzeHtlWfcO44qOUDTI1weml7hfGh6hvOh6R3Oh+YHOB8CZOB8AL1t
wpE=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50PiC86HxCedD4xvOh6YHOB+aXuB8
aHqC86HpDc6HpkeH2Z+ezV+WoeIATa9weWh6hvOh6R3Oh+YHOB8CZOB8AHAY
woQ=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50PiC86HxCedD4xvOh6YHOB+aXuB8
aHqC86HpDc6Hpkc4H5peHSLkMnq2zFVzgKZnuDw0vcP50PwA50OADJwPAMSt
wSE=
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50PiC86HxCedD4xvOh6YHOB+aXuB8
aHqC86HpDc6Hpkc4H5pe4XxoenYwOWS9MfGspgM0vcPlofkBzocAGTgfAKVu
wXk=
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50PiC86HxCedD4xvOh6YHOB+aXuB8
aHqC86HpDc6Hpkc4H5pe4XxoeobzoendoUMhMSX0q54DND/A5SFABs4HAGFF
wSU=
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50PiC86HxCedD4xvOh6YHOB+aXuB8
aHqC86HpDc6Hpkc4H5pe4XxoeobzoekdzofmBwfO4B2SegdMoOIycHkAImbA
jw==
      "]]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEyB2CsBWvt7mm9kYbzy1daxU7bi+BnVj15NaUE
wZ/aZtGUK4jg64ktvFQ3RQrO3/fJ6qX9P0k430hozSN7fwS/2upglmqHBJw/
Y6qAwrqV4nC+J7/9g7VbxOD8buFp/3hXicL59vN/pJ7pEoHzQ3XUl/8KF4bz
T113/rJHSAjO37FmMpfnHgE432yVgPip1XxwvndhRM+Zg9xw/v1zRk/i93LA
+f6xSbuSF7LC+Qfi1kqdK2CC84/NfhEbGPtvP4yf+dJoq/Se73C++tWv3d4s
H+H8mF+2xb0VT+B85t0WKiIhp9H59mjq7dHMg/Oh9sH5UPfA+VD3OqD5B86H
+hfOh4YHnA8NLzgfGp5wPjS84XxofMD50PiC86HxCedD4xvOh6YHOB+aXuB8
aHqC86HpDc6Hpkc4H5pe4XxoeobzoekdzofmBzgfAmQcXptdKtuw39MBAARX
wmE=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7., 7.}, {0, 51.49757275833493}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7620387200049887`*^9, 3.7620387573058*^9}, 
   3.7620388739918423`*^9, 3.762039203135398*^9, 3.762039609134142*^9, 
   3.762039867279158*^9, {3.762041172841692*^9, 3.762041189947319*^9}, 
   3.762041910452346*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
4YzFyP/K8eNYA/pbA8OHD+dDHzX+H/3haeY=\
\>"]]
}, Open  ]],

Cell[TextData[{
 "The above plot just produces ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["w", "i", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}]], 
    SubscriptBox["\[Delta]", 
     RowBox[{"i", ",", "\[Alpha]"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as expected."
}], "Text",
 CellChangeTimes->{{3.762039211128604*^9, 3.762039234702385*^9}, {
  3.762039619643901*^9, 3.762039626165058*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s see if we can now use this basis to calculate the \
matrix elements for the Harmonic oscillator:\
\>", "Text",
 CellChangeTimes->{{3.762016527711047*^9, 3.76201654802969*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{"T", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox["\[HBar]", "2"]}], 
     RowBox[{"2", "\[Mu]"}]], 
    FractionBox[
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["x", "2"]}]]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.762016551158897*^9, 3.7620165997505903`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{"V", "=", 
   RowBox[{
    FractionBox["1", "2"], "\[Mu]", " ", 
    SuperscriptBox["\[Omega]", "2"], 
    SuperscriptBox["x", "2"]}]}], TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.762016602884913*^9, 3.762016605957076*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["The matrix elements of the KE operator:", "Text",
 CellChangeTimes->{{3.762016640631023*^9, 3.762016646131133*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["T", 
    RowBox[{"i", ",", "j"}]], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox["\[HBar]", "2"]}], 
      RowBox[{"2", "\[Mu]"}]], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "a", "b"], 
      RowBox[{
       RowBox[{"\[DifferentialD]", "x"}], " ", 
       RowBox[{
        SubscriptBox["\[Chi]", "i"], "(", "x", ")"}], 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["x", "2"]}]], 
        RowBox[{
         SubscriptBox["\[Chi]", "j"], "(", "x", ")"}]}]}]}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["\[HBar]", "2"], 
       RowBox[{"2", "\[Mu]"}]], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "a", "b"], 
       RowBox[{
        RowBox[{"\[DifferentialD]", "x"}], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{
           SubscriptBox["\[Chi]", "i"], "(", "x", ")"}]}], 
         RowBox[{"\[PartialD]", "x"}]], 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{
           SubscriptBox["\[Chi]", "j"], "(", "x", ")"}]}], 
         RowBox[{"\[PartialD]", "x"}]]}]}]}], "-", 
     SubsuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[HBar]", "2"], 
         RowBox[{"2", "\[Mu]"}]], 
        RowBox[{
         SubscriptBox["\[Chi]", "i"], "(", "x", ")"}], 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{
           SubscriptBox["\[Chi]", "j"], "(", "x", ")"}]}], 
         RowBox[{"\[PartialD]", "x"}]]}], ")"}], "a", "b"]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7620166499006023`*^9, 3.762016800181436*^9}, {
  3.76201684266782*^9, 3.762016848307652*^9}, {3.762039647793899*^9, 
  3.762039661689254*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
The second \[OpenCurlyDoubleQuote]surface term vanishes when we are looking \
for bound states, so:\
\>", "Text",
 CellChangeTimes->{{3.762016804492097*^9, 3.7620168186840353`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["T", 
    RowBox[{"i", ",", "j"}]], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox["\[HBar]", "2"], 
      RowBox[{"2", "\[Mu]"}]], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "a", "b"], 
      RowBox[{
       RowBox[{"\[DifferentialD]", "x"}], " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{
          SubscriptBox["\[Chi]", "i"], "(", "x", ")"}]}], 
        RowBox[{"\[PartialD]", "x"}]], 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{
          SubscriptBox["\[Chi]", "j"], "(", "x", ")"}]}], 
        RowBox[{"\[PartialD]", "x"}]]}]}]}], "\[TildeTilde]", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[HBar]", "2"], 
      RowBox[{"2", "\[Mu]"}]], 
     RowBox[{
      UnderscriptBox["\[Sum]", "\[Alpha]"], 
      RowBox[{
       SubscriptBox["w", "\[Alpha]"], 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{
          SubscriptBox["\[Chi]", "i"], "(", 
          SubscriptBox["x", "\[Alpha]"], ")"}]}], 
        RowBox[{"\[PartialD]", "x"}]], 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{
          SubscriptBox["\[Chi]", "j"], "(", 
          SubscriptBox["x", "\[Alpha]"], ")"}]}], 
        RowBox[{"\[PartialD]", "x"}]]}]}]}]}]}], 
  TraditionalForm]], "EquationNumbered",
 CellChangeTimes->{{3.7620168251005907`*^9, 3.7620168396200047`*^9}, {
   3.762016917677786*^9, 3.762016960469222*^9}, {3.762039665377204*^9, 
   3.7620396755046873`*^9}, 3.762041921675939*^9, {3.762042644137765*^9, 
   3.7620426501147757`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["\<\
Calculate a matrix with the derivatives at the abscissa (this step takes a \
long time, and could possibly be sped up somehow):\
\>", "Text",
 CellChangeTimes->{{3.76201943846137*^9, 3.7620194510344477`*^9}, {
  3.762041296436976*^9, 3.7620413145961027`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Chi]p", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"wn", "[", 
         RowBox[{"[", "i", "]"}], "]"}], 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}]], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Chi]GL", "[", 
          RowBox[{"xn", ",", "i", ",", "x"}], "]"}], ",", "x"}], "]"}]}], "/.", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{"xn", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"M", "+", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"M", "+", "2"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.762017828112623*^9, 3.762017885591251*^9}, {
   3.7620185064380693`*^9, 3.762018512340768*^9}, 3.762018882502777*^9, {
   3.762019606477352*^9, 3.76201960820256*^9}, {3.7620388018607492`*^9, 
   3.7620388069946957`*^9}, {3.762038879906629*^9, 3.762038883687831*^9}, {
   3.762041221412547*^9, 3.762041249376478*^9}, {3.762042123642583*^9, 
   3.762042129049238*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell["Calculate the matrix elements", "Text",
 CellChangeTimes->{{3.762019460191187*^9, 3.76201946620964*^9}}],

Cell["", "Text",
 CellChangeTimes->{{3.762042083660449*^9, 3.762042084249383*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"W", "=", 
   RowBox[{"DiagonalMatrix", "[", "wn", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76204208591529*^9, 3.762042091626038*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Chi]p", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ".", "W", ".", 
       RowBox[{"\[Chi]p", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", 
        RowBox[{"M", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "2", ",", 
        RowBox[{"M", "+", "1"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox[
      RowBox[{"xn", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", 
         RowBox[{"M", "+", "1"}]}], "]"}], "]"}], "2"]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.762017919549004*^9, 3.7620179361323357`*^9}, {
   3.762017990792758*^9, 3.762018206776375*^9}, {3.7620183093194847`*^9, 
   3.762018310126265*^9}, {3.762018524550694*^9, 3.762018541628005*^9}, 
   3.762018888063002*^9, {3.762019128728187*^9, 3.7620191589313602`*^9}, {
   3.762019512158105*^9, 3.7620195356424026`*^9}, {3.762019613643231*^9, 
   3.76201965021731*^9}, {3.762038910659237*^9, 3.762038923384321*^9}, {
   3.762038961094894*^9, 3.762039043522683*^9}, {3.7620397324993896`*^9, 
   3.762039788208579*^9}, {3.762041555989053*^9, 3.7620417443993483`*^9}, {
   3.762041776654529*^9, 3.762041776917286*^9}, 3.762041865953926*^9, {
   3.762042093979599*^9, 3.762042094692644*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", 
    RowBox[{
     RowBox[{"T", "+", "V"}], ",", 
     RowBox[{"-", "20"}]}], "]"}]}], ";", "vals"}]], "Input",
 CellChangeTimes->{{3.762018324149641*^9, 3.762018352843102*^9}, {
   3.7620184273302307`*^9, 3.762018430679904*^9}, {3.7620188047979593`*^9, 
   3.762018804875414*^9}, {3.762019260572364*^9, 3.7620192608034067`*^9}, {
   3.762019480923232*^9, 3.7620194937060738`*^9}, {3.7620198796799726`*^9, 
   3.7620198833082733`*^9}, {3.7620200756789103`*^9, 3.762020086704978*^9}, 
   3.762020392474848*^9, {3.762039780714522*^9, 3.7620397948785477`*^9}, {
   3.76204184841719*^9, 3.76204184874032*^9}, {3.7620421639897337`*^9, 
   3.762042164680279*^9}, {3.762042358530849*^9, 3.7620423896314383`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "19.50624384815151810910392461683298888732`12.902586595825747", ",", 
   "18.50667785971882520946460798189265643588`12.902586595825747", ",", 
   "17.50057599291103691429803344581389059189`12.902586595825747", ",", 
   "16.5007077479329488018045169620829488715`12.902586595825747", ",", 
   "15.50001516458771104420177769897558153666`12.902586595825747", ",", 
   "14.50005228975610327041895065099521232911`12.902586595825747", ",", 
   "13.49999801953599455795563306456893853117`12.902586595825747", ",", 
   "12.50000273980029976469123912983434963861`12.902586595825747", ",", 
   "11.49999977305833957472362717021903613539`12.902586595825747", ",", 
   "10.50000010097902163546133980927001437305`12.902586595825747", ",", 
   "9.49999998928311287581621064302376053116`12.902586595825747", ",", 
   "8.50000000250145725119758147021633161517`12.902586595825747", ",", 
   "7.49999999973372929631740447274947651726`12.902586595825747", ",", 
   "6.50000000003795332663407791167808493663`12.902586595825747", ",", 
   "5.49999999999661470277372163261510166945`12.902586595825747", ",", 
   "4.50000000000030057844641121696042289439`12.902586595825747", ",", 
   "3.49999999999998132227157634789293352144`12.902586595825747", ",", 
   "2.50000000000000091793086054433538411068`12.902586595825747", ",", 
   "1.49999999999999997097092320606356147495`12.902586595825747", ",", 
   "0.50000000000000000036367641321447964381`12.902586595825747"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7620187936555557`*^9, 3.7620188320274057`*^9}, 
   3.7620189887819366`*^9, 3.762019075761826*^9, 3.762019162247787*^9, 
   3.7620192614105453`*^9, {3.762019472893552*^9, 3.762019530333293*^9}, 
   3.76201965152122*^9, 3.7620196860165787`*^9, 3.7620198839376383`*^9, {
   3.7620200761855803`*^9, 3.76202008720833*^9}, 3.762020124376869*^9, 
   3.762020157348987*^9, 3.762020195562643*^9, 3.762020393490409*^9, {
   3.762039023504043*^9, 3.762039047567397*^9}, {3.7620397655907497`*^9, 
   3.762039795379113*^9}, 3.762039883381536*^9, 3.762041617354656*^9, {
   3.76204166143008*^9, 3.762041691158411*^9}, 3.762041734103801*^9, 
   3.76204179223379*^9, {3.762041849283063*^9, 3.762041867775775*^9}, 
   3.762042062963269*^9, {3.762042150267815*^9, 3.762042165498612*^9}, {
   3.762042359181925*^9, 3.762042390417796*^9}},
 TextAlignment->Left,
 TextJustification->0.]
}, Open  ]],

Cell["\<\
Cool!  It\[CloseCurlyQuote]s working!  Note that this implementation where \
the weights are absorbed into the DVR functions does not require a \
generalized eigenvalue problem, but just a normal eigenvalue problem.  Now to \
make this more efficient.  Can we speed up the evaluation of the basis \
functions and derivatives? \
\>", "Text",
 CellChangeTimes->{{3.762020230907098*^9, 3.76202027277372*^9}, {
  3.7620203104815063`*^9, 3.7620203122072477`*^9}, {3.7620397998861732`*^9, 
  3.76203984372449*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"xn", ",", 
        RowBox[{
         RowBox[{"vecs", "[", 
          RowBox[{"[", "ii", "]"}], "]"}], ".", 
         RowBox[{"\[Chi]", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", 
            RowBox[{"M", "+", "1"}]}], "]"}], "]"}]}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "20", ",", "18", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762020313945561*^9, 3.762020375870678*^9}, {
  3.762020411288993*^9, 3.76202043132086*^9}, {3.762020545028927*^9, 
  3.762020545292716*^9}, {3.762020582331546*^9, 3.762020584933733*^9}, {
  3.7620390569848003`*^9, 3.762039061034094*^9}, {3.762042222613834*^9, 
  3.7620422255011253`*^9}, {3.7620422756031647`*^9, 3.7620423450575953`*^9}, {
  3.7620424078725348`*^9, 3.762042467264989*^9}, {3.762042500593652*^9, 
  3.76204254518487*^9}, {3.762042688843203*^9, 3.762042751423545*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
/6AyHex5lb1GI12FHQ28qy/y0sFjW5BpFq/GRmnWXE+maUH8kFBFuHQNjrOY
eJfVQAuTe3L75XfX4kP2sgnlObTAqht9M0uzDh8pYx5pf0oLMernf4TtrMex
AU/DB6/RgrWtIPOewnpsFPcjdMyYFnKeujOfNmzAjmyvekaUaSG14XJJ+2AD
bmgSf/yHlxaUxTiPtPs34tiFU88apmnAxdfI+9S2JlzkKTb/vYEGxPr3uSih
JnyxR/h4Ug4NGPiWrDo6NGPclEPyf0oDT+zWhco4f2HCcMLz7DUaWHnW+82E
+IU9TCrP7DSmAWfKtV5Ozxb8s/vEtxUlGuCa/BAxp9CKm6cvvv7BQwOfeCLL
mP+2Ynay2Xau3k0ce18qQPdjG661oQo+TNrED7Xsyj7dbMcDOdKcq7ab+L3J
iQh93Q58XvAazwWxTVyc2/mHl9qJZUNoxAq7N7D4Bco3+rlOrM/WpMbxagMH
nWcQkmzswmXxIzbGNhtY9MOLlcuff+NXh44+DhPZwMU6HU4DL7vxz/GunwWd
6zhGucwiJKwHW2V85+mJW8fZnxUv7tT4g/ff/m2/ZLmO1VbqhuW//8HelseA
ibyOtYfK0vGBXkynO7adrW0N/73FnzNW0IsXtH4l0D1fw2yfP698ONKH1Yzo
RabM1nDt88xg+tI+3ObmndYosIaFJVctpk/348aY7YfSm1bxuMkrt+vt/Vi6
Qez3jchVfGbX8+InLgO4kmIVqma8ik2yBq01lwZwo1er5j/uVVzREqoeHDaI
dzytUE2oXcG39zndOS8xhNvlzsdpPlrBbdaWupA/hHv2x17tOrWCx046x2aY
DuODRTdy3dlW8Of1MA+pmWE89GPZaaViGR+/WVknHTmCZzUkQv8LXsZu+RJf
sveO4hOqE9QF7WV8seipVHn7KF5+bSPqwrCMOSIopIv3xjBtuGdEXfESdpUp
jIpS+IttJhQ8d99bwr73bsScbPuLWStCfwRpLGGz1JPiD4PHMUkk/MGv9UVc
9khV2ezABL40qvKZWriIRY6o/0yfmMCCSn5mlr6LmPTZYuRh6iQWnbri9Fht
EaOZR4/nbf5h7x10gwULCzj69qTNPMcUVuxSb+7OW8CCFyTVVC9P4d0spD0r
nguYLr3PrKB6CkdnvqDlVF7A6ua7vz5QnMbHqrGG8L953O3EYh39dBqfcnw4
Qcqcx81tV46Pzk/j19eX2fjc5rHSR1uPgHMz2IaGM5Zux5Z95HePffEMtmMo
jR4bmsNDgSORwfKzGO5J0FamzmG9IP/Q6ahZ7H1T8neS/RxmG0v5kbQxi1PD
OGw9xOewosnZbtKlOex+Xpo40D2Laxze3Pj9aw6PTrkursXP4krqw/DJo/N4
5dhvzgLL2a25hUlcP2se55j60VwTnsWK9ynKC5QFzCZ7uk7i1wwOUCrD48EL
mOHrSd/qyBl8Ioi1evf8An7J7E17zWgGhwQMmGH7RdwnXO3IzTWDpbdb2MTX
L2Ji2Dj1bdUWD94X+n4cWcJHfRjhQOg0/ulCP6iWuYQvlA19LdXZwnSHnVao
y1ju13zYKYZpvFuby4ElbBk/fK1yqKpoCnPu9um2X1nGz5RfVhz3n8Km4NPK
emkFH/VXVf52aAqzLHMbrLevYHHy4l+9uX9YqV3j2GG9VTyX272L7P4P19kx
5/0sWMWy1RLbO0cncfUT59cpCmv4gSN0RDhOYn1nG56KhDWs9F+BtnrPBFYZ
+LtygGsdS/DzuLZaTuBQVj6HJf91bLqj6PjF5nFs0FJ3gn5mHRejmrZxg3H8
RE8mw8pxA4c0qco4/fyLFZz5Hm20bOA7Lss7GrT+Yv0dz/9OntzEE299Lfeg
McxT01N7onAT/y2iyj5WG8MXtDkSo4Vo4OXnrie9uaNYNidJ5IQBDTTfJ2J2
7RrFozt2/TkSSAPZO5C659sRHPcxZ/TmdxqQT+++/VFiBGseUzywMEUDhxjE
rAbjh3Fbb0rtFxla+LPf/xe/0DC+/Jg7vcCSFvZrb06oRwzhEV3vKtpHtMCz
M/G1FdsQtudqUAnHtBA1fn7B88EgrumV+WO5dU9kBx0ZCtgYwArFnk2XJOnA
euWw16ObA/jex68c+AwdZOvavHwy04/L38+Fmd+ng+irCY4PL/djxpwdxso5
dLDDfbXizlAfViw1tzbsoQPtk76VrnZ92HzodmY2Bz3wrpNcDTp68UWBF8fN
DtCD/cPWVAXTXnzDMEvisBM9WE1/vkNbu9UHn38/fjGCHvqV82brdP9gt3HI
bCmgh4OxqZyKAT3YwABZhwzQQ76/+NXMG914J/HJ+A4nAwRSulhEL/3GK2rJ
4Z9VGSD4Yutvf5sujIqCOJVtGKDIlW+i0agTe1s4Nv8LYAApNStJkeMdWJR/
yDDqPQOsTtx2tdvfjj9wfpssrGGAiYc+xYnybXiHbkf25SkG0OA+vatjWyt+
hPVjUngZodV37T03bwvuvMGdeF6ZEfJrAtU0GX5hwSuSVUmGjFDNPNrmttiE
1VMCKa6XGcF0h2xY5Fgj1hE68OhrMCMsKR82zPvdgDV/HpIK35rDliUUZRrq
67HE94iuoXxGODszTW4MrsNTf/fml9czQob7Qc6lKzU49dyOfMUhRqD/riYt
YFqFT7Bd7aKuMML/AaJDCKI=
      "]], LineBox[CompressedData["
1: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
ZAZLs85I+IacIJn+/7UO/m/dXvT/APEluE0=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1Vnc8l1/YRvbe32Ul2TtK6nvONyQkW0JGVkbZ0ZSUTVGUJCRpISsrfG9S
RpRd+RWiRIWMrMTr/byf9/njPM/1uc4593Wu+77P59nqFmDlycTAwGC3Ofzv
+/8eMfj/L9cY3arcDQqcvpv3Uy8ykWrXl+6iu4nXDlmzbYnOoo5NCqx0rFNg
cF3PwUqugMrcUnz5yCYeKa5Al68WU2v9Tmx8+keBx44XiZx15VT2DyYnHDbx
VGJKBlNwNXWCy6S9a40CzhPJkko+9VRnNl8SbRP7V78YaLRopPq1P7F/9JcC
Hddlt8bwNFN5bLkTOTax8mW2gNEfr6l6D68Wua9SIC/eGQYm2qi8jRqNlSsU
UCxQEnFn66QG5v15xbSJj52oqtTf1kX9Fxf/a/8yBeT9swSa33dTD5RleUYs
UWBR+1Br34NeqoWEmkbhIgXoL9sGTyX3U4mdNPN3fyhwhiBo/PDqe+rdhm76
9wUKKGnICvk8/kgdm/sS9WeeAl/4WXe/+PwfddwnKGN5jgIplaW1d5WGqI+3
RTLMzlJAIlXYNM54hKooxfti6DcFFhQqJzgSvlC9XSitjTMUaHxALbd+P0r1
+vJQLnOaAonMT596anylbiso/3h8igKOhuvdOOMbNacIDSn+ooCY3y7ZUa7v
1I9LRtpjPygwFnz4kWnSBLX7Ss9QyiQFCpwcj1wk/aDG2fw3uGOCAr5KhjvP
lv+kbni5K3SMU0D1k6ge1WGKqlXn227/jQLfAjrPtfLMUOVsZus/jVHAbL5i
luf4b+oH1aUttqObfkuF1d05NEs1Mj2f1TRCgVikmJ2sO0c9XRgZu32YAq5m
3TfHVOapXubMry58pkCNuV/BXbkFqqA2m+2b/yhwVW+544XcH+oFp/hdvIOb
emVPcyLVRWpBa8IJww8UqF774SyzZ4la/tX9cOjAZn7kj991NF+mtkietMvo
29TDs+V2l98KdeRMQUBZz6b/hQ2Wl1NWqVvm+XKauigAzJktIfV/qcqJj7+1
vqUACyF99d7cGvWoXoj+qw4KsI09+8Gjvk69QTxZXdW+Od/7x62qUxvUHp5b
BrmtFBCxkb707hgDIknPfo94TYEnFsPCo9yMyMv2XJ51MwVIisqxQnWMqPah
dqhEEwU8Rtg/uAcwIWGSlNMwnQIxIafYemW3oPDHuk436ymQNBYkcmx0Cxo+
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
      "]], 
     LineBox[CompressedData["
1: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
v+U6WLvuL/w/EaTmXg==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1nHk8Vdv7x5F5nh0OSSRJpihJ7VVoUqaoKJIMUYYkDUoqmZNKUikqzRRS
KdlraTLkCokGkSFDUZlnfr77Ob/7z73nxXXYZ++11vM8789bzT3A3pOHi4tL
j4+L63//hn+Uyf//l1uk6bP0KTb5t/RM78zjzwo311zYbjr9OsW5T3t0e0lh
S6fUSPkkm/RcPi486291IW/xw5Nbpl/XXiy4kq3ytfDF7j1T9RNsolx93qPu
+49Cwc/r9jhPv25pdF97urW1sENkXVnlOJu4D6wbH5ndWegq4KuIpl+HSq8/
qnKpu3B32X2nu2Nsksle2Baq3lMo5igaJzT9uiWnPNgiua9w5Z2ErJ2jbDL4
Psi3Q2OwULzIoOjpCJs0+Mwp9v4wXBh4Y+Atz/Tr1LjW2FcXxgonomO6LIfZ
xOLFkt0GxyYLV+emeoYNsckpqi4hpJSLtp2pZ5A5yCa9e9SqDu/ioVn/IZsP
A2yyzTP0yC1lXvoqXYXb+9mkQutn4uBPPrqlt+nEQB+brH/mKu7/RoBu89mb
MtzLJh8lO/pF8oXoe+rhXD09bOJmfNyikojQ2rPECxr+scmEhvbEiwYxetd2
dknRXzYpDdgr0SYoSXs13Zl7+c/09c39VMO9QIpWv/34i3f39O/ztagie6s0
nZa1vEG7i03edhhP9CbJ0F+G1hi3/GIT9XoDt5LPsnRVRHVDYieb8D15MqQ/
V56Odvj2dWEHm/juK3qtE65AT3ntnFfexiZOCo5vClpYtNFL3zKnn2zyKj1w
5LudEj3XoaewvoVNHknI7jxfxqY/6w7NcGxmEy0Pirt+gwq9Zv2R1Fc/2ETt
Wu/HZ99m0gczw6PmNE5fj4ZkPxnTWbSXDe/bo9/ZxGbHwbgkETVa2ljA8f03
NjlTe9V8e7MafdQlZrH4VzY5v1wgeR89m75dErtn1efp3+dS3omqNHX6cevO
TcG1bHKx73ixZ5QGXazqtzmlhk14nK1mq4TMoX8cuh2QWz39eZZLnh/arUnP
6JNIe1XJJjutqhUHds2ldeLu/SypYBP72jNP5fy06G0r95m/LWeT/X5rfZwO
zqPPs/zyn5WxyRvJKQMSq01Xi120SC9hk+UkW3JdxnxacXZPe9g7NvkV6so3
9EaH9nIMvbHxzfT3mwtKFnctoF/cMQ6e+YpN3is81H/B1qNlFWe5NGI2GR+7
s7BDS58+cM/UJbmQTQx7B79EFOvTjVtOBZsXsMnBP+Yij30MaLu5XDfb8tnk
y7+E4iAJQ7pE9kHHsadssm6kTvxNviG9Wi3SUiKPTT4LqDbd9lxI/7f+7POk
HDY5ouyxnC1vRDtfLLeQfMQmixbf0VQrM6L/cJm0H89kE94tHZfyjxvTsTEf
0zvvsUlX2NyUJrNFtI5B2t7Vd6ZfP/BQSx1bRH8auux0JWP6ejamGXcULqYj
v7/b8vM6m2izvtS8PWlCL2+eHTAnjU0CNktOGW1YQk/wPUrdmsomJamWecZK
pvT7qMjGqEtswsI/tt/vMqVzbr8xvp/MJqsvrPXb/24pnenuk/bq/PT1Vw2v
T75jRuOCYOWqRDZZ4hKRJZ64jG7Pacv8dHr6ebXe9KP+2HJ6niW2rYxlkwv9
A8HcByg6bP+kQFEUmwjcyTGmTRHdvTKj+k4Em+Qs+NB0uxDR+7KysyOOT79f
wkfa1GIFLf5E/cbmMDb5r4QuP1Sxgn7lNHF7ViibrPyeKOKxbSUde2UZbjzA
Junv14aOdK+kfQ+3/koKZhOupE626Ulzesdgzzy0d/rzXxTYPUfZgg6Q8DrS
5McmXrnf/77Mt6DPv0XNB33ZJFzQUH1qiyVdwTqxld+bTSJN/KK6xi3p2ULa
HTE72eTQyjPKpzJW0bHJJtEz3Nhkq2ZKc4nNalqkKGvpvm1sotMa9eXZ5Gr6
ZnQMz5ctbPI71JXbPmcNbdv9vt7IkU2SutnOF73X0vJ/g8si7dhEdwlpiVJb
R/87HfG+YgObPHW1uqbeuI5uLh1tFF3HJvNdC2N8063o3zfqBFasYpPYxfK3
t3mup08dzNi8e+X09c1fq29qsIHWuv+rJW45m0RlW3maC1jTHxffz7xhyiZG
M5UtD7Zb0zFqLTmPFrGJKE/Bh89VNvRa7wt9uYZsMkM36YThTltaSqhob6Yu
m0jL5wYlNNvSrfxeOqnabKK/ZLEJl7cdjd0i1E9oTj9/F9U/Rv2zo2/KK292
nc0md/QPmM85Zk+f01pQrD9zer3jNYz5LL1x+vo82zeiOL3eyzpkXH+wkY5z
K9iWL8cm31y/J4WvdaCTIk1O+EmxSXDrf877uxzoe4J6rSyx6fe/NWfwWJIj
Xdx27cQLwf+tV61e6Ss20X9mRbvY87JJRJ1wVm3fJnrms1/BP6aUiP3alJLZ
DzbTm++9K/EYUyImg/HPI7y30KlDbKfGQSWi29BxbFzLie64/muOba8SMeTO
ZMf+daKX3zXUe9atRNZvr41fUOBMpwn3B8t2KpHDw94f2+K20gKlukPerUrk
Wbnb3yc7ttGHW5qf5DQqEZ568uOymQs96CSZ0/NViezUjL5zQdmVDtV51jG3
VonUPnhqfpt7O12d2BPkUKVEhq9ZR5/7t51+9/KL54FyJWKsOE9D8oAbbZ8d
UJRYrETkH/8omjvhRofufnwq/ZUSUVWxVkmM3UGjPxm5twuViPXmvYvWqrrT
aSYWa27mK5E7O9aJbSxwpy+vO7sq+bESmWf25XqW605aVyM+69hDJVLdptK/
RciD3v7W6Oj2e0okbQeL17HAg9bWjXtinKFEUjJLqq4He9KJrmc28aQpkbxi
XRfK2Is+t2mF29tL03/f43W3F0x40bry16vDkpTIcX/lrD3l3rTH1YdZumeU
iMrozb3jN3bRS7p8empilMg3x6a++nAf+jbPx6t7I5RIyfGaheJevvSjH525
vMemr8fRowaJ9rvpjZEP9RMOKRGhdfVd7qv20Of6ZimIBysR/7Z/npEr/Og9
Wiu8IvyVSJ99QeqouT/drCExs2eXErl2ZulZvCGA7u2IXe6wU4ksr8i/7qsX
SKcG5xVnuSiRgpcPv1wtCKRbi+OeT2ye/jzPHws8ZLWXftcsKWthP3397eZ7
TTTspVe8Na8LX69EsodzXswLCaJv2DrMzFulRMJahV8Ny+6jdb2CeBuQErEK
WlDpgffRnXzXYiZNpz+PG4o//fYH0x/06rLkjJXIjOAPXLKL99NNLSp71fWU
SFu7tfpm3hBabXbQx7nzlEjFxMX1i7+H0PG/PtbMVp++Hk/uH8krOkBrLDPf
L6uiRLBE1OOKnIP0b0WSNy4//VpkQc+prEN0Q/i6898klciHe6nGX/MO0+N7
myVzhJVIfeen8PfFobRld9SCo7xKZPz952qntiM03WvaSU0qEkPbW/NPSYbR
bifGzEeGFMmOkKVxG1Ydoxemli6716NIVqX9d/CLeTitj27V2ky/qauD+yPn
X+H0Vv8E8e5WRXLi61af+8nH6VzNUz/DGxTJDYMXt0vWnKCNfWK2inxWJG+d
jno/4TpJtxpfCYyvUiT99rceBNIn6aL4Fxq87xWn71fDfaPHI+hyv/YDQW8U
yaZ8ddre6hTN9UXNt65QkURqHI4/pBRJ76zwGTN8pkgKdhg3+P+NpHs34Pmn
shXJRIDjY8OyKPrh5tlj/91TJCY2X0Xe3o+m3Vxmx4jdVCRbdWPbxFJi6I+V
1gPmqYrEzmz+yoGUWJo39w6194IiETxUODM0K44e5Fqw60KCIoluRUfSPsXT
dwsb/LOjFElD2BNnd6kEWqnj5cZX4YqkdzX7xWu3M/S68GL594cUyV/VJf81
7Uikl0ZOPisLUiQrF36f0Fc5S/8Z2bG4aLciGfs+4m/TfJbe/q0n6aGHIlGb
dWbWspxzdKL2w8pzLork5kiq9GjMefpEe/Ivv02KJNZX3TJyTxJtKJ3ZTNko
ksGg2flNWy7QN+535wuuUSSF0pd3i9ok0zXZW/1KkCIpXRu7nd/mIv1GY3Aq
bIkisWX1nf+wJYUO4S8M1DFUJBphNYK79lyi2xyzcaW2IokI1aU/xFymFWQq
u3arK5LZktx5/DlXaKHlysMTbEWy3mz9L9HmVPp5bVJTpKwiyZ2S2NGsfI3W
/r7kHr+YIkl1Xs+K2pFGO9uJ2BzlUyR7bnNFT2xOp9ctFPr4a4JFVu1W0FDl
vU6PnVhobDPIIq9Cfd20nlynd6PY/ff/sIjg5xEzxd036H4y8my8jUVmWLy2
d9O5Sfc6+c9a1cgiXBFvTPdM3aTdRToeRtaxSPHFiX6z1gza8pPXTvoDi8Qe
8z9e/fUWfeXZr2XdxSwyb6nCD52W27RH7r7lMoRFXpYNSa6fuENff8vtqZ/P
Isq6krL68+7R1j1JORbZLBLn6db52es+vc94gYbtXRbJD+xIXPX0AS1wruyl
fTqLjNrcFT6kkEVLCfiFrk9hkQGe9E2BsQ/p+CRZt2WJ019/422aLJBNHzYt
8p0TzSKHgq7k1lZn0/XDQVd4w1nkq9Dv8yO3c+jcD/N6vx5gkUVxmxomT+bS
o/RP/7sBLHJ08PvZNp/H9JN3t6X8vKff3+r4w+wteXRL256vWttZpDcWGbnY
PqEjVE1Kv21iEZk8tnqX7VM6JVCw4ZQ1i2gVS4e6OD+jZ339zpq7ikWWvZlj
lrMnn1beln8IL2MR0wcOXu1Rz+nYwYtcNsYsMv9I2sjUgxe0770jWZ90WERp
Mf/g6OcCmg72Ct+oMf1+36K3fhYvpCO2OB4qYbNIme9c7ZQNNM33dTcxkmGR
zNlyuk+vYzoirPxoijCLeF9/pVgXR2juVQdy+rhZJO3nUhWyuYg+or9n66oR
BfLHJUQt2egVPbDsQWjiPwWyTThI02n2azrQ30i6ul2BDPzS1RFSe0O3Fwmo
ijQqkBtTmYa39d/SriZzbiytVSB+a7qW6Nu9o6ur4q/s/E+BeL/tWnHnRDG9
KmG5yMk3CmRvyMN1Im9L6Od+pj2XChTIg60GDttYZfS8wPANd3MVSH/wftfL
R97TKRckZz28p0ASXh32edtTTgs0/Nr1IF2BsCxW7P9+oILet1ZCK/2iAvlx
pBXtFaikv9cddYlPUCAVPdGrfb9V0qtjFgkFnlIgRVwJFV+eVdE5LkvmWx1R
IG/v9X3CqdU0yzHytco+BdLc9dxFOfYjHRagUt3uo0D4yn54/j1WQ7dkTm66
56ZALFbs+mMS9oleJaZt775ZgZyytx0ajqil7yamvZa2ViB1Eynhekl1tNDi
7Q9eWEx/v/nK2PoHn+ldXD5CzksVyNPZ62W5yr/Qb7tefv9noEAWpT6debn/
Kx21McHhmJYCSc0i89UN62nxeMnLfKoK5KLDvUKZs99p12TzhyflFIjR2cCa
3VKNdHDQ3LMjIgrktYFI/gWnH/TGWS9XevNM/3zPDWvmLW2ih9O4X5cPy5MT
rZOXAxc00x49Q1Laf+UJ66Fq9m79FvqSbJresZ/y5OirR1FKFq10ktAQu/yb
PHml9kjt6K6f9KbKqVrJanlS+l4l7PzVNrpp13O3DSXyJIOMpbq0tNOGH9Wf
H6flyXautWHflnTSayWoH1l58mQ0lm+22PVf9DwVkdqq+/Jkq5tBdC+ri64a
j7rcnS5PwsLLs+Oud9Po4ZMF3BflScDv2iufTf/SwQZJZ0RPy5Obtncz9gT9
o4Mi1YnESXnypzK1/p1ND704aycWPiRPMgdLBg4b99KvbjmcnvCXJyVFOv+i
1fto2cDBeR0e8mS9Ycn7f4r9tJ7o2gtlzvLEcs2V6FzWAC11eP2HDFt5cnnG
bc0K1UH6xXOuzyGr5ImzR8ctc70hWvu95yNkJk8SfN35ZVYP0+4PQx15DOXJ
THnZNWbeI7Sx07bRgrnyJMW4IH596ih9uEitwk9Fnpy+KDdY2TtG67e/r1SQ
kScNS9UjSn0n6E1lzjwvBOXJw9mtixbxTtF/fCvcHSblSPccnai47Vx4qESz
t61PjuR/o/iebuDGAa07s/d2ypE3hlkXLq/nwc6Fp672N8iRce1gkyXbZuCn
G+OfB9TIEd83Sd1nj/DiE3cO8LaUyhH2lPiTjCw+jPNXh1ljOdL/tTlh719+
vCdqXDM3T266PpQMHV4hiGNlkifF7suRgyEXDy25JYSVXWT53NPkiMCig7FG
iiJY2eOA6cMkOfIiOTer86ooPqOFr/XGyJFbKatatiwUx3vv/zbQOyZHPi81
mn/iiwR+0znetzNYjsiTwleGJZI4pq23NdFHjnw3FD/EnSmFcfp/vE9d5cia
kDiTBSnS2It1euPHjXLEItaY+2m8DA7bYFDVsUaO1PuLfrwSI4v50Iujg8vk
CEtD8mFDghye+jvXadxQjvy8h86FpcrjXS6Hd47OlSPOXNeOheYqYMvonNR/
ynLEda5WyKdKFg6i0k0apeRI9snNlyZnKOGPdoq73/HLEcXDGaI+W9jYGysb
3R6TJYeFJSplK5SxfvT982H/ZEmj0cUWbs+ZWCfzVYzNT1ny6Mg19RTxWdhp
vqe84ldZ0jE/fMJmbBZ+yXduybcKWaJxN/DY3WE1bLt0bd+F17JkR0/Avev8
6phVHmu+Nl+WvBQIC106RwPL5W/SHsiUJdy/Lw/sd5iDLacy71y6LkvWXXmn
YJekie9eP12wKFmWJLG4m8tb5+LlacOe5bHT379znUOn5TwsMNx92/mYLAk+
fMP/9jNtzJvpF9a0T5aUuAoZ8JrqYOOCA11uu2TJLMljV3j+W4AvzxHt+bxN
lhxJmPHweqAeNvytHb/WTpZ077HKCzynj8dEagpzLWWJwaHUnz+CDfBolECk
rKksaf3d73t9uyHW2f621V9XlrDeOljk2i/E586KfS2aLUv+4325V8baCGur
/vAUU5AlMx5o972xM8aDAsui7URkyYtn6SXvXBbhfiuNFQlTMkRs/sxeVtBi
rPX7QuLrPhlSwnszoCDBBPcu7MrqaZch7eygT5F4CX4RfLySVS9DbFdXPNso
uRQfyXIcNqmUIZORz+RnHzfDZg275ti/kSFK3xb09kgtx8P8BZs98mWIs7nB
utevKJw9d/2ZgEwZ0tvoJvG+FGFPpFy+L33663f/LjZ+tQLL2c0X35skQ9pG
38xML1uJ3zgdcvSOliEX6368Fmkxx3uc+W9sOiJDIpabzz0oYollNlb3LQ+U
IWF6XWt+mq/CT82/r5vlIUMu3/+mtTF+NXbUmXtndLMMGX0kVVzUugb/E80W
rLCSITuoBHWDDetw5M8DAZcpGSLiZLf8+lsrzH4a9m37QhmSPO6sIG29AT8I
e7N+5lwZkqD94OHJNmu8hFr7+pOSDFnZM4sndLUtLhoSpSLFZYjNOYn4PHU7
vPquBNHjkSH+B9X2/xGwxyW2dquqB6TJk5ubCrX67fGanqoqv05p0iLzyGNn
x0ZcFHPWnee7NLEu1d59rdUBmyglDp+plCZPX5dWfulwxJk3/jsv/0aarJkR
f0FuYBNWVl9nlPxMmhRE7X1uJ7QFVz7OlZV4IE0GN0q+k9B3wrJ+eQHHr0kT
I99Ji6p9zrjd2say+6w0SShbuii5Zite63Tygv0pacK9v+SSq70LNom3dcs5
OP1+PhkB2t2u+Fn701tCe6TJzJr2b0fs3fCb3U89t26XJhdYc5a0me3AO1g2
6bftpQk/T6xNlbE7Pt0d7vjbUppEJsqrLl+2E6/6bXVq3hJpIvOm7I7ORg+c
IJWtt0NHmpSk3u5MPeCJvdyyHM6pSpNNSvdbE+574bI68/6X0tLEYtmnFJ4u
b0wf2CfexCdNtPi0+IeX+mCEzG5ODksRdtANnYDLvnijwbVcuS4p0nDSQnSX
wB48sO6SmWajFKkwFb/VfMIPq59esEK/Wor8SZ4abBANwD+GnMnCt1JEfL3o
8Yf2gVgvTu2Ffr4UEU7T2amruReLrD6uO/eBFLn25ofaX64gHDL/sIrCNSmS
/1Kr8F9zEPY3EY3iOitF/KN4jReW78ODfot3t5yUIskawTFPXwZj8fKxUhwi
RfSSDrw4nLcf59o73bzgI0WO1IqXHHscghNmsIw9t0kRnqJsj7mvDmCbH1Mv
dW2kyNZ5NSs/dhzE/zokl/aukCLHJA65n5x7GO9TsXr0yEiKvN2X9npxWCiu
PfpQ0XuuFBl0XO31r+sInim89DBLSYpUPglcl7UvDFu++lf5WlSKfC4VM1ks
FI6tb39Q8ZmSJNVDN39fag3Hpk/r3AR7JUlm6yiefH8c8/cKXr7eKklCE6Wf
eOIT+KnTzlKjOkmyfOxXWQV9Eq/qbvtTVCpJBjQiuE3LInB+5nnhtS8lyQux
hi13mk5h4RQf5bKHkiT4yXClPF8UXvFol4bldUkirFzjE20UjZ16E2e/OC9J
DqwIVB8PiMH2O5rl50VKEmnN/yb2PovF88e3cZ87KElulP4a7hSOx52vuJr7
fSVJ1/xSWQ/f0zj6yX/5di6SZNWGXXY/PiVggZrXp+7aSJJ6eY/NjzQTsc/M
ljUjKyRJmFdwckBHIs5Mms9jYSRJLsv9/KmffRZXL7qaE60pSQw0nlr2HT2H
P/OabC5mSZIV59qfPLU7j8nkWO+UsCRp3H5oUej8JJyxb3ac56gE+RkSJsMt
dQFnJVOqpEGCWBUJXRIUTMZJXjY3JF5LEGeKXXxW8iLe1mIn63Bn+vv/5V5N
1U7BQmKr95+OkyBPPlUqz9t0Cae06L4tCJAgSn+CLRafv4wFvIV4GzdKEDnT
NNnipit4y8Vag6HFEuT0c5vTn1dcxWeDk615lSUI2hP5cPfja/jO5Bpnfi4J
YnlPzQyx03G68R+HiRZxYrrIfH/cz3R8WDFyeWexOPlSf+fExfzreNF9SYWy
B+Jk3VUbD4+kG7i2/XRD2hlxMn0sUOo9eBNvrp5I8t0nTpbu3pWBvDLwcx83
U+3N4qTi4Bce22238GTWk4oGU3GyKP208aytt/G8tAm76JniRKcpwizH/Q42
XGbyRpNHnIiZYYUZ++5ilWjPOS9+ipGkbLNiufh7uOvYqf0rS8XI1+UT6zqz
7uNUjZQ8nDn9uo3r5tHPD/CCkKvNBoliJPfu6g/VIlk4I/jCVMo+MSIZUfWh
Y/VDPKoaLjKwSYx4HLqWgeMfYcODLvyrTMWIjkXd7fl+2XjNvVch8Spi5OOZ
oE8R7By8vNGipYRLjDyplbZOqcnBIkqtVmMtokRWMV/SKyV3+n5Oz1YvFiX0
JneVP16Psdm1Q1Ir74uS12ekgvVRHk5rD/DfdFqUzHnzVnaBxhP8xfhksVug
KBnoC5tqkX6KB6MfK+/YKEqGZy4zchR9hjt/cPlvXiRKIiy5HodL5uPny3YX
mCuKEnvvklAv1efYI62XV3NchIRFXEjgX/IC/+G7uG6yQYTwX/X+7eZSgK32
bokvLxIhM3OWn9sf/xLHNS0qS8wQIa5E6aTFu0J8a5Mhr1WUCBkpGyv8Txjj
y5XrTMd8RMjBjsDrggsI9rUJ33N9vQjR92mLFvhKMPtj9eVletNf93a9sDO+
CF/fuvLtBykREt/y+Z2yxSvM31nxe3O/MEHfHVUWcr/Ga0IPitfWCpPrDp9S
br9+jd2lqQXrnguTR2s3LzkQ9wZvfjh7Td4VYXL05bfJjC1vsa6N+nbZMGFS
k+neqTf/Hf7aj4J83YQJF7trWGFG8fTfG3r86Uph8pb/4AKXH8U4wm4Ba0RD
mLAWJK868LYE94plFxkKCJO6dbUzGvJKcWbNjLCdnUJEyc3E8+zDMvz8ltaG
uPdC5Oqel75nc99jyeMz9e5nCZEXge6yDaQcP/f6qU7OCBHdPdruB778hzM3
HZ3/314horVd1sFlvAL32bZZVm0UIg81JAeKZSvxKcdZ+8qNhcglubnnorIr
sbfH/Me0ghDR4bE57mdXhVOOCvDfHREkIb+iXh0aqsKs63m7o78JkoMVVY6Z
N6pxY4Vh6/ZCQbLhoc5Svo0f8ST/iQDdNEGSGZMSFCFYg73W3hDrDxckP9zk
xue9rsEzk8/T2e6C5MXCm3UDJz5hjW7HEx4WgsSVZyVfx+pafMS6c4uEpiBJ
Ku+J4JKuw6ovNqzMERAkGedyN1FNdVhS/+TydZ0CxMkh4nDGk894Y3bMhq9l
AuSNlPc/vTNfcIvpjoAdmQKkrcw5v8nvKyYfhDIaTwuQj8e2Vz+3+4b/+p/8
7RAgQKz19y/PN63Hu1gVlkW2AuRu/ZXxeq3v2LC8M1fDUIDcjPgoqqXcgG0e
Br46JiNAEiQiY5zkGjHdPD7jYz8/sctNeJci/AOH+yQcmFnLT8aLykU+n/6B
r66co+L+jJ9kLDqa5CvbhPn9i/qvpvCTg5LpbrbXmnDJb/fJqkP8ZJONcWDM
/GbcWCBkOunMT1b3mb2We9mMrRqe3Jltxk+sx586Ddi0YKGN3qspFX5ywPfm
Qq32FjxLaaaiwyQfubSMx+7h8VZ8auFX5R2NfOTX/o85Uao/sXnaFXsvwkcs
ZBQ25ZGf2MbF/cXO63ykQu6/ZUaebfipn66D0wk+Ynd0YJeAWDsOrJxSXb2T
j3SuTaxbkN+Oj5yqVVlgwUduhV6NuePVgVviczeIzOEjm6RVjgWzOnFK2/lH
TXx8ZKm4RH7Sf5341rnD5tltvEQjYJ+RYOQvzHvWS+hAMS8xMl7XX7HiN37Z
tJl70V1eYuJ2fqiDqwu/ibCe3x3NS4L+WS/f9LoLzz68LirVh5dk/TxSIh/T
jWuLrOQs1vESLqSSrG3/Bzdstf/Uos1LvKf07pyd+RebrHEtDhXhJf3qT8as
/vzF/sJFYaJdM8i+DrVTc9z+4fE55QnJ5TPIaNJzDVL6D3dcPjakmDWDHLh4
vX5gYQ/W8/mWn3x6Bun5+yXz3bUeXJXYWC3qP4N4X3O/YCjci/+Tirc8Yj2D
tN1YmrwkpBdrd/2Q/Kk7g1hPeDz61tyLv6s2GK2WmEFKshp+sGz78J/Mkzk3
/vKQhXl3tXsK+7Dz+arIoQ885Jrk63gPnX48+2NxnmU2D+F/vUBg35V+bL7H
a+npRB6y/33HJWWRAYxds5QqAnnIj3n9FjtCB/C1+6n2gnY8ZHGDjeCKrgFc
ZWPUstRg+ud1jLUUuAxiD+vg8l1SPGR0zXBd1YdBbHt7m/iZHm5iO2XRemLl
EL68ufvuwypuclukWfDDkyFs5q6ZWpzDTWb4f7B8Om8YL38n0PHlLDdZqyl2
xeTaME45eTb+515ucsPoiuAmmRFse/l1zC87btKVcihBPGYEewhfa+ww4CaL
Nt7VcZ8awVUfZyX8kOImR3bObbENGcUpg1YXqnq4SGnpYM7X7lFcFKQ6UFDF
Rbgi5S9NeY7hXY0KFuk5XMTX1/k2//cxjD/msI6d5SJCa5PbF9mN40Kb7qAt
e7lIj1rZtsRX4zhwY5m9jh0XERwY4JMxmMClDWvyR/W5SOArxRY6dQLX9Oy6
+VqSi/DFGvef55vEIoqOWuJNU/iP1dol53ZP4goXtlxs+hQWE3TMfV4xiVtz
NMTGtk/hYHrLdmG9Kewqt1dyh+oUFg1wQBHxU1gzmkv1ZcMk7lVc4zi3fQqv
F/5oInptEkc3Kn44pMpF3l3pcLFzmcRLH8Wd7l/LRa6ZrUiIU57EwkdGfs7Y
N/13d9WXvvg2gcctd36+c5mLOGcWSDZensCCYqUePwgXWRz63X3YaQKbVmnH
Zf3kIsFOKwm/4gSOPRdtJSHETXhW/9IS/jyOR22bb/HN5yaD5p9SeS6O40hR
k8uJVtzExHaG8j/HcbzkbYxWti83+bw7+Ha17DgWDK2z9YjmJtXJWmb3P47h
wQVqMlkZ3ESjSvV7yLkxzNvgFRCLuUmZknOMid0YXhR313P88/T376tDfyXG
8HHjtgGe6ftm3tkS49SKURy/wl/8Kj8P+TLX9TI6PYo7ZM5cLWXxkMbFKf71
VqP4Uuaam9FzecjSopDcAOFRfE3kiupXQx7S9nrEc7RkBI/oR0rTpjykj1KL
ORI1gm8rCx8xonjIGuNu9qDl9OsKzW3LEA8Zueky05t3BI+vqs/9vIyHcMcH
JX54NYxvn9IO5zfhIS7d84P0jg/jm7FSb97p8hChkpjXkdQw7nc8G6Y4m4ew
lOMjPk0M4dT2e48mp58D307DJ+yXQ/g8tXVzyCQ3kdMPc3Q6PIQbXG7tD2/n
JjP/+XkmmAzh8JXRwir/cZPgeTw/XwwO4n3dM+TXP+ImuvWmNQ15g7jIlZUi
lsBN9ARZC0eDBvHW5LeJO3y4SVLWJW4xg0FsnyTCtWYFN1lZjimFvwM4acuv
n0SOm1h5xHazsgawfsuOleVtXOTm/hFh6d0DWMkoSM43j4u4cIml8MwbwO5W
7O2Xw7iIG+/bpF9t/bhfy0XVxZKLkONq3GUZ/bixfPGmXMHp++Pg7O/p7v3Y
zH+TgNHZKZwRJ7o9cFY/bu97uttPeAoHuGoULmnowwttvgw4Hp3Enf98hsav
9GGr8MJb3Z0TeHTld7EXTn14MHJnqJHtBM5xCOPaq9CHXXa+D9HOHsfCmhs+
qH3qxcFyAxc/CI1j3mdrD5ef68WmV380qLuM4asCwdx7bXvx9dHTVnPvj+Jm
hXIPCfFeXLtg4vuXfyO4sN0u4877HpyySDd5qcEIXnGAjyyJ6cHKcmrB63cP
4x3v2p69XdWDl5d+OiCaNoTnfhqIs+Ltwaob118PLR/EsTcNzd4X/cOpuRH/
LvUN4AsGV0ssjv3D39vDPL1lB/CKY8YG+Wb/cHmvKVerbj+epTj0e13/X7z7
Yz6RMO/D/bkNCxQD/uKbMcO3f03/nprlalrfOv/gZ3KjucFbenCEB/ma6PEH
Wx8obM1y+of1j7ywNG3sxg4upw7q3PuD1WQkfeqcuvHuAzL7tp7rwg7ziix2
1XThRrM5zzv8f+FX9H+fu6y78ImsF+tqlnfg6I/GczxLf+O20o9zZ/K04aPe
I/OqzH9ji7OBtu/yW3D3ncNOC+lfWD+EKyvctwn/LmJrJpj8wvtrflrxLG/A
V5/Un2nK7cQ89WdCzmR+wTUnCpMXLOjEAdxTX+7O+oSz59GmQXc6cIflwhDr
y5VY+35D6CO1Dsyyd0rmWliCzXhVnX9eacfuDzJ3jhyk8Y/Fxz7JyLdj580h
YxYW9/Biy6lu08Q2rOUUJSt+OImS1Em76SzchjPdfmUMlzylzne5DgZF/MT7
F38IvKb7hsqOXN52crIVm3KnqdztLqe2jS7bd/rg9OvVQZnlldVU9mqXq2d6
W3D5HxupJXPqqCT/VI/YPS1Y9uCuZYrB36h5AWMlR9uacW9Tgb5fYSNlufZw
mY9bM+6Xv7X/MlczJTXB8rH+2oRNs2IW5au2Uu6xdRnzHZpwXJ7INwmzNsq5
58lR7oofeIvO/J3XHTuoFoO8vg+rf2AuuY6KPXt+UUtTMsR0TzbiAb+VM4PC
u6jnx2b5Z4U04J7FpnY5Z/9Qp5TqBWf6fseLnrcvlLP9R0Xtqvt+zKUel4hz
5/xx7KGKfKS7q22/4RzlTlVP515K3cR5trLFV1z55pb2fKc+aqw71Mdt8Rec
1WEW2rehn+qOPfAqTfszvh79UIo2GaAoiQ0LvqrUYZ+M0e5YxUGq7vD4PQmp
Wqxspibp/G+Qev7fKRPE+wk/t5l9cH7hEFUu0Pl599BHvLFxYs7UsWHKYZ5m
3Llf1fjpr8eKn0xGqGGDZTZ536uwWpDFxqz2EWpETXdOVWUl3rX/UXVU/Ci1
pbdHsTrqA77b33/RY+4YlRmwVGzY7z/87K/sTfP8MWpGgYmGrMN7/MlLol+D
GqfWfup01TQtxW+cWmMFX45TKrR1oe6sYnyt5Lz3H90J6uR+b2oB/1vs8Vgl
tvbiBLV2bOFPta5XWFnpRC8ZnKAmbfIeilYT/GicpGdZTVLvf1Yu/hZQiE23
fk1KTZ6klErTnWKWPsf3jSsqTtdNUtprP79SF3iCBeNTrY+LT1Gy3gf23a+e
ritdLWUPLJ2iSlaO15qa3cOHM0tUA1ynKM2+z44j1ek4MURzr8+BKSo+X6h4
1sdEfOGlq6BX5BQFlGXpyxNhe396xE1RAfB1yoXz9U29zP9PqXL+/3z4+VTl
A/j52V7M+1N7XOD9G+D3o37Hwu+3F35/ysUIfn8v+PuoYif4+ybg76d4x+Dv
D4HrQ5my4Poch+tHbcuB66cM15fa9Q6u7yq4/pT7Zrj+PPD5UKs84POxhc+P
YnXD56cNny9V0wOf73v4/KmjQfD5c+4Pqt8f7g8K7h8quB3un2twf1FT3+D+
yoD7j1q0Hu6/13B/UgdM4P7UhvuXupUO9+8XuL8pEgH3dyXc/9TbVrj/KXg+
qHgCz8dFeH6oCyx4flzh+aIuCMPzFQvPH4Xz4PnD8HxSDbrwfGrD80t1ecDz
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
fyUyc45l/JUcvyX6f7/l/wHSADxB
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7., 7.}, {-2.7471234532434075`, 2.401186578738096}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7620204350270157`*^9, 3.762020578025281*^9, 3.762020615834607*^9, 
   3.7620390668252897`*^9, {3.7620423211420927`*^9, 3.762042345562243*^9}, {
   3.762042396358492*^9, 3.762042429351186*^9}, 3.762042468008411*^9, {
   3.762042501926045*^9, 3.762042545561488*^9}, {3.762042689293462*^9, 
   3.762042751954933*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1440, 794},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>2. Inherited,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "NPMStyleSheet-V2.nb"]]}, Visible -> False, 
  FrontEndVersion -> 
  "11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 21, 2016)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 216, 4, 128, "Title"],
Cell[CellGroupData[{
Cell[821, 30, 141, 3, 81, "Author"],
Cell[965, 35, 203, 4, 24, "Institution"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1205, 44, 147, 3, 94, "Section"],
Cell[1355, 49, 190, 3, 40, "Text"],
Cell[1548, 54, 774, 13, 160, "Text"],
Cell[2325, 69, 319, 7, 40, "Text"],
Cell[2647, 78, 643, 26, 46, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3327, 109, 195, 4, 94, "Section"],
Cell[3525, 115, 1039, 31, 105, "Text"],
Cell[4567, 148, 658, 19, 104, "EquationNumbered"],
Cell[5228, 169, 897, 28, 104, "EquationNumbered"],
Cell[6128, 199, 141, 3, 40, "Text"],
Cell[6272, 204, 509, 14, 60, "EquationNumbered"],
Cell[6784, 220, 155, 3, 40, "Text"],
Cell[6942, 225, 476, 16, 104, "EquationNumbered"],
Cell[7421, 243, 146, 3, 40, "Text"],
Cell[7570, 248, 348, 12, 52, "EquationNumbered"],
Cell[7921, 262, 392, 14, 57, "EquationNumbered"],
Cell[8316, 278, 341, 11, 40, "Text"],
Cell[8660, 291, 272, 9, 46, "Text"],
Cell[8935, 302, 416, 13, 56, "EquationNumbered"],
Cell[9354, 317, 389, 11, 46, "Text"],
Cell[9746, 330, 1822, 66, 77, "EquationNumbered"],
Cell[11571, 398, 140, 3, 40, "Text"],
Cell[11714, 403, 598, 22, 64, "EquationNumbered"],
Cell[12315, 427, 132, 3, 40, "Text"],
Cell[12450, 432, 445, 14, 66, "EquationNumbered"],
Cell[12898, 448, 450, 13, 46, "Text"],
Cell[13351, 463, 1381, 46, 88, "EquationNumbered"],
Cell[14735, 511, 317, 7, 70, "Text"],
Cell[15055, 520, 650, 22, 66, "EquationNumbered"],
Cell[15708, 544, 641, 21, 66, "EquationNumbered"],
Cell[16352, 567, 135, 3, 40, "Text"],
Cell[16490, 572, 535, 17, 84, "EquationNumbered"],
Cell[17028, 591, 848, 29, 49, "Text"],
Cell[17879, 622, 181, 3, 40, "Text"],
Cell[18063, 627, 2249, 83, 69, "EquationNumbered"],
Cell[20315, 712, 177, 3, 40, "Text"],
Cell[20495, 717, 571, 20, 66, "EquationNumbered"],
Cell[21069, 739, 646, 21, 88, "EquationNumbered"],
Cell[21718, 762, 619, 15, 100, "Text"],
Cell[22340, 779, 279, 10, 40, "Text"],
Cell[22622, 791, 938, 31, 62, "EquationNumbered"],
Cell[23563, 824, 1547, 59, 62, "EquationNumbered"],
Cell[25113, 885, 162, 3, 40, "Text"],
Cell[25278, 890, 1485, 55, 62, "EquationNumbered"],
Cell[26766, 947, 142, 3, 40, "Text"],
Cell[26911, 952, 725, 26, 56, "EquationNumbered"],
Cell[27639, 980, 486, 19, 44, "Text"],
Cell[28128, 1001, 515, 15, 60, "EquationNumbered"],
Cell[28646, 1018, 233, 7, 40, "Text"],
Cell[28882, 1027, 953, 32, 84, "EquationNumbered"],
Cell[29838, 1061, 242, 8, 40, "Text"],
Cell[30083, 1071, 975, 31, 88, "EquationNumbered"],
Cell[31061, 1104, 813, 29, 49, "Text"],
Cell[31877, 1135, 1173, 43, 52, "Text"],
Cell[33053, 1180, 714, 23, 84, "EquationNumbered"],
Cell[33770, 1205, 325, 9, 40, "Text"],
Cell[CellGroupData[{
Cell[34120, 1218, 154, 3, 46, "Subsubsection"],
Cell[34277, 1223, 165, 3, 40, "Text"],
Cell[34445, 1228, 505, 17, 104, "EquationNumbered"],
Cell[34953, 1247, 142, 3, 40, "Text"],
Cell[35098, 1252, 402, 11, 60, "EquationNumbered"],
Cell[35503, 1265, 533, 18, 47, "Text"],
Cell[36039, 1285, 695, 21, 104, "EquationNumbered"],
Cell[36737, 1308, 258, 10, 49, "Text"],
Cell[36998, 1320, 654, 20, 104, "EquationNumbered"],
Cell[37655, 1342, 985, 31, 98, "Text"],
Cell[38643, 1375, 795, 25, 52, "Text"],
Cell[39441, 1402, 1040, 32, 104, "EquationNumbered"],
Cell[40484, 1436, 254, 7, 40, "Text"],
Cell[40741, 1445, 477, 15, 61, "EquationNumbered"],
Cell[41221, 1462, 351, 10, 60, "EquationNumbered"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41609, 1477, 530, 16, 58, "Subsubsection"],
Cell[42142, 1495, 263, 9, 40, "Text"],
Cell[42408, 1506, 433, 11, 58, "EquationNumbered"],
Cell[42844, 1519, 175, 3, 40, "Text"],
Cell[43022, 1524, 466, 15, 104, "EquationNumbered"],
Cell[43491, 1541, 987, 33, 104, "EquationNumbered"],
Cell[44481, 1576, 138, 3, 40, "Text"],
Cell[44622, 1581, 2378, 74, 119, "EquationNumbered"],
Cell[47003, 1657, 1272, 37, 90, "Text"],
Cell[48278, 1696, 150, 3, 40, "Text"],
Cell[48431, 1701, 3005, 87, 104, "EquationNumbered"],
Cell[51439, 1790, 596, 20, 49, "Text"],
Cell[52038, 1812, 911, 26, 62, "EquationNumbered"],
Cell[52952, 1840, 876, 24, 90, "Text"],
Cell[53831, 1866, 1796, 46, 96, "EquationNumbered"],
Cell[55630, 1914, 394, 12, 49, "Text"],
Cell[56027, 1928, 213, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[56265, 1936, 706, 24, 38, "Item1Numbered"],
Cell[56974, 1962, 772, 25, 40, "Item1Numbered"],
Cell[57749, 1989, 930, 25, 34, "Item1Numbered"],
Cell[58682, 2016, 805, 25, 39, "Item1Numbered"],
Cell[59490, 2043, 1066, 33, 39, "Item1Numbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60605, 2082, 167, 3, 62, "Subsection"],
Cell[60775, 2087, 419, 10, 70, "Text"],
Cell[61197, 2099, 164, 3, 40, "Text"],
Cell[61364, 2104, 650, 21, 105, "EquationNumbered"],
Cell[62017, 2127, 1265, 41, 100, "Text"],
Cell[63285, 2170, 319, 8, 40, "Text"],
Cell[63607, 2180, 1004, 29, 108, "EquationNumbered"],
Cell[64614, 2211, 556, 18, 43, "Text"],
Cell[CellGroupData[{
Cell[65195, 2233, 3262, 97, 74, "Item1Numbered"],
Cell[68460, 2332, 4165, 139, 182, "Item1Numbered"],
Cell[72628, 2473, 3790, 120, 126, "Item1Numbered"],
Cell[76421, 2595, 3059, 88, 165, "Item1Numbered"]
}, Open  ]],
Cell[79495, 2686, 237, 4, 40, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79769, 2695, 159, 3, 62, "Subsection"],
Cell[79931, 2700, 607, 22, 40, "Text"],
Cell[80541, 2724, 239, 4, 40, "Text"],
Cell[80783, 2730, 1499, 41, 196, "Input"],
Cell[82285, 2773, 176, 3, 40, "Text"],
Cell[82464, 2778, 718, 17, 160, "Input"],
Cell[83185, 2797, 589, 20, 40, "Text"],
Cell[83777, 2819, 572, 16, 83, "Input"],
Cell[84352, 2837, 116, 1, 40, "Text"],
Cell[84471, 2840, 1111, 28, 88, "Input"],
Cell[85585, 2870, 174, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[85784, 2878, 701, 17, 83, "Input"],
Cell[86488, 2897, 54473, 981, 507, 34746, 657, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[140976, 3881, 441, 14, 50, "Text"],
Cell[141420, 3897, 254, 6, 40, "Text"],
Cell[141677, 3905, 444, 14, 91, "EquationNumbered"],
Cell[142124, 3921, 321, 9, 81, "EquationNumbered"],
Cell[142448, 3932, 167, 3, 40, "Text"],
Cell[142618, 3937, 1963, 61, 97, "EquationNumbered"],
Cell[144584, 4000, 237, 6, 40, "Text"],
Cell[144824, 4008, 1665, 50, 100, "EquationNumbered"],
Cell[146492, 4060, 269, 5, 40, "Text"],
Cell[146764, 4067, 1197, 32, 88, "Input"],
Cell[147964, 4101, 110, 1, 40, "Text"],
Cell[148077, 4104, 82, 1, 40, "Text"],
Cell[148162, 4107, 175, 4, 83, "Input"],
Cell[148340, 4113, 1605, 41, 180, "Input"],
Cell[CellGroupData[{
Cell[149970, 4158, 882, 18, 83, "Input"],
Cell[150855, 4178, 2392, 37, 198, "Output"]
}, Open  ]],
Cell[153262, 4218, 518, 9, 100, "Text"],
Cell[CellGroupData[{
Cell[153805, 4231, 1376, 30, 160, "Input"],
Cell[155184, 4263, 79045, 1312, 540, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

